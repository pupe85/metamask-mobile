// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tokens Portfolio View should match the snapshot when portfolio view is enabled 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                collapsable={false}
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                Amount
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        collapsable={false}
        gestureResponseDistance={
          {
            "bottom": -1,
            "end": -1,
            "start": -1,
            "top": -1,
          }
        }
        pointerEvents="box-none"
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            [
              {
                "overflow": undefined,
              },
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            {
              "close": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                {
                  "flex": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                    {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="none"
                style={
                  {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  [
                    {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    [
                      {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "backgroundColor": "#ffffff",
                          "flex": 1,
                        }
                      }
                      testID="tokens"
                    >
                      <View
                        style={
                          {
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                            "paddingBottom": 16,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingTop": 8,
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "flexDirection": "row",
                              "justifyContent": "space-between",
                              "width": "100%",
                            }
                          }
                        >
                          <TouchableOpacity
                            accessibilityRole="button"
                            accessible={true}
                            activeOpacity={1}
                            disabled={false}
                            onPress={[Function]}
                            style={
                              {
                                "alignItems": "center",
                                "alignSelf": "flex-start",
                                "backgroundColor": "#ffffff",
                                "borderColor": "#bbc0c5",
                                "borderRadius": 20,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "flexDirection": "row",
                                "height": 40,
                                "justifyContent": "center",
                                "marginLeft": 5,
                                "marginRight": 5,
                                "maxWidth": "60%",
                                "paddingHorizontal": 16,
                              }
                            }
                            testID="token-network-filter"
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                {
                                  "color": "#141618",
                                }
                              }
                            >
                              Ethereum Main Network
                            </Text>
                            <SvgMock
                              color="#141618"
                              height={16}
                              name="ArrowDown"
                              style={
                                {
                                  "height": 16,
                                  "marginLeft": 8,
                                  "width": 16,
                                }
                              }
                              width={16}
                            />
                          </TouchableOpacity>
                          <View
                            style={
                              {
                                "flexDirection": "row",
                              }
                            }
                          >
                            <TouchableOpacity
                              accessible={true}
                              activeOpacity={1}
                              disabled={false}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              style={
                                {
                                  "alignItems": "center",
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#bbc0c5",
                                  "borderRadius": 50,
                                  "borderStyle": "solid",
                                  "borderWidth": 1,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "marginLeft": 5,
                                  "marginRight": 5,
                                  "opacity": 1,
                                  "width": 50,
                                }
                              }
                              testID="sort-by"
                            >
                              <SvgMock
                                color="#141618"
                                height={16}
                                name="SwapVertical"
                                style={
                                  {
                                    "height": 16,
                                    "width": 16,
                                  }
                                }
                                width={16}
                              />
                            </TouchableOpacity>
                            <TouchableOpacity
                              accessible={true}
                              activeOpacity={1}
                              disabled={false}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              style={
                                {
                                  "alignItems": "center",
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "#bbc0c5",
                                  "borderRadius": 50,
                                  "borderStyle": "solid",
                                  "borderWidth": 1,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "marginLeft": 5,
                                  "marginRight": 5,
                                  "opacity": 1,
                                  "width": 50,
                                }
                              }
                              testID="import-token-button"
                            >
                              <SvgMock
                                color="#141618"
                                height={16}
                                name="Add"
                                style={
                                  {
                                    "height": 16,
                                    "width": 16,
                                  }
                                }
                                width={16}
                              />
                            </TouchableOpacity>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "backgroundColor": "#ffffff",
                            "justifyContent": "center",
                            "marginTop": 50,
                          }
                        }
                      >
                        <Text
                          accessibilityRole="text"
                          style={
                            {
                              "color": "#141618",
                              "fontFamily": "EuclidCircularB-Regular",
                              "fontSize": 20,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 22,
                            }
                          }
                        >
                          You don't have any tokens!
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;

exports[`Tokens render matches snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                collapsable={false}
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                Amount
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        collapsable={false}
        gestureResponseDistance={
          {
            "bottom": -1,
            "end": -1,
            "start": -1,
            "top": -1,
          }
        }
        pointerEvents="box-none"
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            [
              {
                "overflow": undefined,
              },
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            {
              "close": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                {
                  "flex": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                    {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="none"
                style={
                  {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  [
                    {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    [
                      {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "backgroundColor": "#ffffff",
                          "flex": 1,
                        }
                      }
                      testID="tokens"
                    >
                      <View
                        style={
                          {
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                            "paddingBottom": 16,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingTop": 8,
                          }
                        }
                      >
                        <TouchableOpacity
                          accessibilityRole="button"
                          accessible={true}
                          activeOpacity={1}
                          onPress={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "alignSelf": "flex-start",
                              "backgroundColor": "#ffffff",
                              "borderColor": "#bbc0c5",
                              "borderRadius": 20,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "flexDirection": "row",
                              "height": 40,
                              "justifyContent": "center",
                              "marginLeft": 5,
                              "marginRight": 5,
                              "maxWidth": "60%",
                              "paddingHorizontal": 16,
                            }
                          }
                          testID="sort-by"
                        >
                          <Text
                            accessibilityRole="none"
                            style={
                              {
                                "color": "#141618",
                                "fontFamily": "EuclidCircularB-Medium",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0,
                                "lineHeight": 22,
                              }
                            }
                          >
                            Sort by
                          </Text>
                          <SvgMock
                            color="#141618"
                            height={16}
                            name="ArrowDown"
                            style={
                              {
                                "height": 16,
                                "marginLeft": 8,
                                "width": 16,
                              }
                            }
                            width={16}
                          />
                        </TouchableOpacity>
                        <TouchableOpacity
                          accessibilityRole="button"
                          accessible={true}
                          activeOpacity={1}
                          onPress={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "alignSelf": "flex-start",
                              "backgroundColor": "#ffffff",
                              "borderColor": "#bbc0c5",
                              "borderRadius": 20,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "flexDirection": "row",
                              "height": 40,
                              "justifyContent": "center",
                              "marginLeft": 5,
                              "marginRight": 5,
                              "maxWidth": "60%",
                              "paddingHorizontal": 16,
                            }
                          }
                          testID="import-token-button"
                        >
                          <SvgMock
                            color="#141618"
                            height={16}
                            name="Add"
                            style={
                              {
                                "height": 16,
                                "marginRight": 8,
                                "width": 16,
                              }
                            }
                            width={16}
                          />
                          <Text
                            accessibilityRole="none"
                            style={
                              {
                                "color": "#141618",
                                "fontFamily": "EuclidCircularB-Medium",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0,
                                "lineHeight": 22,
                              }
                            }
                          >
                            Import
                          </Text>
                        </TouchableOpacity>
                      </View>
                      <View
                        style={
                          {
                            "flex": 1,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <RCTScrollView
                          ListFooterComponent={
                            <TokenListFooter
                              goToAddToken={[Function]}
                              isAddTokenEnabled={true}
                              showDetectedTokens={[Function]}
                              tokens={
                                [
                                  {
                                    "address": "0x0",
                                    "balanceFiat": "< $0.01",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "isETH": true,
                                    "isStaked": false,
                                    "name": "Ethereum",
                                    "symbol": "ETH",
                                    "tokenFiatAmount": NaN,
                                  },
                                  {
                                    "address": "0x01",
                                    "balanceFiat": "$0",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "name": "Bat",
                                    "symbol": "BAT",
                                    "tokenFiatAmount": 0,
                                  },
                                ]
                              }
                            />
                          }
                          applyWindowCorrection={[Function]}
                          canChangeSize={true}
                          contentContainerStyle={
                            {
                              "backgroundColor": undefined,
                              "minHeight": 1,
                              "minWidth": 1,
                              "paddingLeft": 0,
                              "paddingRight": 0,
                            }
                          }
                          contentHeight={100}
                          contentWidth={400}
                          data={
                            [
                              {
                                "address": "0x0",
                                "balanceFiat": "< $0.01",
                                "decimals": 18,
                                "iconUrl": "",
                                "isETH": true,
                                "isStaked": false,
                                "name": "Ethereum",
                                "symbol": "ETH",
                                "tokenFiatAmount": NaN,
                              },
                              {
                                "address": "0x01",
                                "balanceFiat": "$0",
                                "decimals": 18,
                                "iconUrl": "",
                                "name": "Bat",
                                "symbol": "BAT",
                                "tokenFiatAmount": 0,
                              },
                            ]
                          }
                          dataProvider={
                            DataProvider {
                              "_data": [
                                {
                                  "address": "0x0",
                                  "balanceFiat": "< $0.01",
                                  "decimals": 18,
                                  "iconUrl": "",
                                  "isETH": true,
                                  "isStaked": false,
                                  "name": "Ethereum",
                                  "symbol": "ETH",
                                  "tokenFiatAmount": NaN,
                                },
                                {
                                  "address": "0x01",
                                  "balanceFiat": "$0",
                                  "decimals": 18,
                                  "iconUrl": "",
                                  "name": "Bat",
                                  "symbol": "BAT",
                                  "tokenFiatAmount": 0,
                                },
                              ],
                              "_firstIndexToProcess": 0,
                              "_hasStableIds": true,
                              "_requiresDataChangeHandling": false,
                              "_size": 2,
                              "getStableId": [Function],
                              "rowHasChanged": [Function],
                            }
                          }
                          disableRecycling={false}
                          estimatedItemSize={50}
                          extendedState={{}}
                          externalScrollView={[Function]}
                          finalRenderAheadOffset={250}
                          forceNonDeterministicRendering={true}
                          horizontal={false}
                          initialOffset={0}
                          initialRenderIndex={0}
                          isHorizontal={false}
                          keyExtractor={[Function]}
                          layoutProvider={
                            GridLayoutProviderWithProps {
                              "_acceptableRelayoutDelta": 1,
                              "_getHeightOrWidth": [Function],
                              "_getLayoutTypeForIndex": [Function],
                              "_getSpan": [Function],
                              "_hasExpired": false,
                              "_isHorizontal": false,
                              "_lastLayoutManager": GridLayoutManager {
                                "_acceptableRelayoutDelta": 1,
                                "_getSpan": [Function],
                                "_isGridHorizontal": false,
                                "_isHorizontal": false,
                                "_layoutProvider": [Circular],
                                "_layouts": [
                                  {
                                    "height": 50,
                                    "type": 0,
                                    "width": 400,
                                    "x": 0,
                                    "y": 0,
                                  },
                                  {
                                    "height": 50,
                                    "type": 0,
                                    "width": 400,
                                    "x": 0,
                                    "y": 50,
                                  },
                                ],
                                "_maxSpan": 1,
                                "_renderWindowSize": {
                                  "height": 900,
                                  "width": 400,
                                },
                                "_totalHeight": 100,
                                "_totalWidth": 400,
                                "_window": {
                                  "height": 900,
                                  "width": 400,
                                },
                              },
                              "_maxSpan": 1,
                              "_renderWindowSize": {
                                "height": 900,
                                "width": 400,
                              },
                              "_setLayoutForType": [Function],
                              "_tempDim": {
                                "height": 0,
                                "width": 0,
                              },
                              "averageWindow": AverageWindow {
                                "currentAverage": 50,
                                "currentCount": 1,
                                "inputValues": [
                                  50,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                ],
                                "nextIndex": 1,
                              },
                              "defaultEstimatedItemSize": 100,
                              "layoutObject": {
                                "size": undefined,
                                "span": undefined,
                              },
                              "props": {
                                "ListFooterComponent": <TokenListFooter
                                  goToAddToken={[Function]}
                                  isAddTokenEnabled={true}
                                  showDetectedTokens={[Function]}
                                  tokens={
                                    [
                                      {
                                        "address": "0x0",
                                        "balanceFiat": "< $0.01",
                                        "decimals": 18,
                                        "iconUrl": "",
                                        "isETH": true,
                                        "isStaked": false,
                                        "name": "Ethereum",
                                        "symbol": "ETH",
                                        "tokenFiatAmount": NaN,
                                      },
                                      {
                                        "address": "0x01",
                                        "balanceFiat": "$0",
                                        "decimals": 18,
                                        "iconUrl": "",
                                        "name": "Bat",
                                        "symbol": "BAT",
                                        "tokenFiatAmount": 0,
                                      },
                                    ]
                                  }
                                />,
                                "data": [
                                  {
                                    "address": "0x0",
                                    "balanceFiat": "< $0.01",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "isETH": true,
                                    "isStaked": false,
                                    "name": "Ethereum",
                                    "symbol": "ETH",
                                    "tokenFiatAmount": NaN,
                                  },
                                  {
                                    "address": "0x01",
                                    "balanceFiat": "$0",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "name": "Bat",
                                    "symbol": "BAT",
                                    "tokenFiatAmount": 0,
                                  },
                                ],
                                "estimatedItemSize": 50,
                                "keyExtractor": [Function],
                                "numColumns": 1,
                                "refreshControl": <RefreshControlMock
                                  colors={
                                    [
                                      "#0376c9",
                                    ]
                                  }
                                  onRefresh={[Function]}
                                  refreshing={false}
                                  tintColor="#141618"
                                />,
                                "renderItem": [Function],
                                "testID": "token-list",
                              },
                              "renderWindowInsets": {
                                "height": 0,
                                "width": 0,
                              },
                              "shouldRefreshWithAnchoring": true,
                            }
                          }
                          maxRenderAhead={750}
                          numColumns={1}
                          onEndReached={[Function]}
                          onEndReachedThreshold={0}
                          onEndReachedThresholdRelative={0}
                          onItemLayout={[Function]}
                          onLayout={[Function]}
                          onScroll={[Function]}
                          onScrollBeginDrag={[Function]}
                          onSizeChanged={[Function]}
                          onVisibleIndicesChanged={[Function]}
                          refreshControl={
                            <RefreshControlMock
                              colors={
                                [
                                  "#0376c9",
                                ]
                              }
                              onRefresh={[Function]}
                              refreshing={false}
                              tintColor="#141618"
                            />
                          }
                          removeClippedSubviews={false}
                          renderAheadOffset={0}
                          renderAheadStep={250}
                          renderContentContainer={[Function]}
                          renderItem={[Function]}
                          renderItemContainer={[Function]}
                          rowRenderer={[Function]}
                          scrollEventThrottle={16}
                          scrollThrottle={16}
                          scrollViewProps={
                            {
                              "contentContainerStyle": {
                                "backgroundColor": undefined,
                                "minHeight": 1,
                                "minWidth": 1,
                                "paddingLeft": 0,
                                "paddingRight": 0,
                              },
                              "onLayout": [Function],
                              "onScrollBeginDrag": [Function],
                              "refreshControl": <RefreshControlMock
                                colors={
                                  [
                                    "#0376c9",
                                  ]
                                }
                                onRefresh={[Function]}
                                refreshing={false}
                                tintColor="#141618"
                              />,
                              "style": {
                                "minHeight": 1,
                                "minWidth": 1,
                              },
                            }
                          }
                          style={
                            {
                              "minHeight": 1,
                              "minWidth": 1,
                            }
                          }
                          suppressBoundedSizeException={true}
                          testID="token-list"
                          windowCorrectionConfig={
                            {
                              "applyToInitialOffset": true,
                              "applyToItemScroll": true,
                              "value": {
                                "endCorrection": 0,
                                "startCorrection": 0,
                                "windowShift": -0,
                              },
                            }
                          }
                        >
                          <RCTRefreshControl />
                          <View>
                            <View
                              style={
                                {
                                  "flexDirection": "column",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "paddingLeft": 0,
                                    "paddingTop": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  [
                                    undefined,
                                    undefined,
                                  ]
                                }
                              />
                              <AutoLayoutView
                                enableInstrumentation={false}
                                horizontal={false}
                                onBlankAreaEvent={[Function]}
                                onLayout={[Function]}
                                renderAheadOffset={0}
                                scrollOffset={0}
                                style={
                                  {
                                    "height": 100,
                                    "width": 400,
                                  }
                                }
                                windowSize={900}
                              >
                                <CellContainer
                                  index={0}
                                  onLayout={[Function]}
                                  style={
                                    {
                                      "alignItems": "stretch",
                                      "flexDirection": "column",
                                      "left": 0,
                                      "position": "absolute",
                                      "top": 0,
                                      "width": 400,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flexDirection": "column",
                                      }
                                    }
                                  >
                                    <TouchableOpacity
                                      onLongPress={[Function]}
                                      onPress={[Function]}
                                      style={
                                        {
                                          "alignItems": "flex-start",
                                          "flex": 1,
                                          "flexDirection": "row",
                                          "paddingHorizontal": 15,
                                          "paddingVertical": 10,
                                        }
                                      }
                                      testID="asset-ETH"
                                    >
                                      <View
                                        onLayout={[Function]}
                                        style={
                                          {
                                            "alignSelf": "flex-start",
                                            "position": "relative",
                                          }
                                        }
                                        testID="badge-wrapper-badge"
                                      >
                                        <View>
                                          <View
                                            useNativeDriver={true}
                                          >
                                            <Image
                                              fadeIn={true}
                                              onError={[Function]}
                                              onLoadEnd={[Function]}
                                              source={
                                                {
                                                  "uri": "",
                                                }
                                              }
                                              style={
                                                [
                                                  {
                                                    "borderRadius": 12,
                                                    "height": 24,
                                                    "width": 24,
                                                  },
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  {
                                                    "borderRadius": 16,
                                                    "height": 32,
                                                    "overflow": "hidden",
                                                    "width": 32,
                                                  },
                                                ]
                                              }
                                            />
                                            <View
                                              collapsable={false}
                                              style={
                                                {
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 1,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  [
                                                    {
                                                      "borderRadius": 16,
                                                      "height": 32,
                                                      "overflow": "hidden",
                                                      "width": 32,
                                                    },
                                                    {
                                                      "backgroundColor": "#eee",
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                        <View
                                          style={
                                            {
                                              "alignItems": "center",
                                              "aspectRatio": 1,
                                              "height": 0,
                                              "justifyContent": "center",
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                              "transform": [
                                                {
                                                  "translateX": 0,
                                                },
                                                {
                                                  "translateY": -0,
                                                },
                                              ],
                                            }
                                          }
                                        >
                                          <View
                                            onLayout={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "aspectRatio": 1,
                                                "height": "50%",
                                                "justifyContent": "center",
                                                "maxHeight": 24,
                                                "minHeight": 8,
                                                "opacity": 0,
                                              }
                                            }
                                            testID="badgenetwork"
                                          >
                                            <View
                                              style={
                                                {
                                                  "alignItems": "center",
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#ffffff",
                                                  "borderRadius": 16,
                                                  "borderWidth": 2,
                                                  "height": 32,
                                                  "justifyContent": "center",
                                                  "overflow": "hidden",
                                                  "shadowColor": "#0000001a",
                                                  "shadowOffset": {
                                                    "height": 2,
                                                    "width": 0,
                                                  },
                                                  "shadowOpacity": 1,
                                                  "shadowRadius": 4,
                                                  "transform": [
                                                    {
                                                      "scale": 1,
                                                    },
                                                  ],
                                                  "width": 32,
                                                }
                                              }
                                            >
                                              <Image
                                                onError={[Function]}
                                                resizeMode="contain"
                                                source={
                                                  {
                                                    "uri": "MockImage",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 32,
                                                    "width": 32,
                                                  }
                                                }
                                                testID="network-avatar-image"
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                      <View
                                        style={
                                          {
                                            "flex": 1,
                                            "justifyContent": "center",
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "flexDirection": "row",
                                            }
                                          }
                                        >
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#141618",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 16,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                              }
                                            }
                                          >
                                            Ethereum
                                          </Text>
                                          <View
                                            accessibilityState={
                                              {
                                                "busy": undefined,
                                                "checked": undefined,
                                                "disabled": undefined,
                                                "expanded": undefined,
                                                "selected": undefined,
                                              }
                                            }
                                            accessibilityValue={
                                              {
                                                "max": undefined,
                                                "min": undefined,
                                                "now": undefined,
                                                "text": undefined,
                                              }
                                            }
                                            accessible={true}
                                            collapsable={false}
                                            focusable={true}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "flexDirection": "row",
                                              }
                                            }
                                            testID="stake-button"
                                          >
                                            <Text
                                              accessibilityRole="text"
                                              style={
                                                {
                                                  "color": "#141618",
                                                  "fontFamily": "EuclidCircularB-Medium",
                                                  "fontSize": 16,
                                                  "fontWeight": "500",
                                                  "letterSpacing": 0,
                                                  "lineHeight": 24,
                                                }
                                              }
                                            >
                                               • 
                                              <Text
                                                accessibilityRole="text"
                                                style={
                                                  {
                                                    "color": "#0376c9",
                                                    "fontFamily": "EuclidCircularB-Medium",
                                                    "fontSize": 16,
                                                    "fontWeight": "500",
                                                    "letterSpacing": 0,
                                                    "lineHeight": 24,
                                                  }
                                                }
                                              >
                                                Earn 
                                              </Text>
                                            </Text>
                                            <SvgMock
                                              color="#0376c9"
                                              height={16}
                                              name="Plant"
                                              style={
                                                {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                              width={16}
                                            />
                                          </View>
                                        </View>
                                        <View>
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#d73847",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 14,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 22,
                                              }
                                            }
                                          />
                                        </View>
                                      </View>
                                      <Modal
                                        animationType="none"
                                        deviceHeight={null}
                                        deviceWidth={null}
                                        hardwareAccelerated={false}
                                        hideModalContentWhileAnimating={false}
                                        onBackdropPress={[Function]}
                                        onModalHide={[Function]}
                                        onModalWillHide={[Function]}
                                        onModalWillShow={[Function]}
                                        onRequestClose={[Function]}
                                        onSwipeComplete={[Function]}
                                        panResponderThreshold={4}
                                        scrollHorizontal={false}
                                        scrollOffset={0}
                                        scrollOffsetMax={0}
                                        scrollTo={null}
                                        statusBarTranslucent={false}
                                        supportedOrientations={
                                          [
                                            "portrait",
                                            "landscape",
                                          ]
                                        }
                                        swipeDirection="down"
                                        swipeThreshold={100}
                                        transparent={true}
                                        visible={false}
                                      />
                                      <View
                                        style={
                                          {
                                            "alignItems": "flex-end",
                                            "alignSelf": "flex-end",
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#141618",
                                              "fontFamily": "EuclidCircularB-Medium",
                                              "fontSize": 16,
                                              "fontWeight": "500",
                                              "letterSpacing": 0,
                                              "lineHeight": 24,
                                            }
                                          }
                                          testID="fiat-balance-test-id"
                                        >
                                           ETH
                                        </Text>
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#6a737d",
                                              "fontFamily": "EuclidCircularB-Regular",
                                              "fontSize": 14,
                                              "fontWeight": "400",
                                              "letterSpacing": 0,
                                              "lineHeight": 22,
                                              "paddingHorizontal": 0,
                                              "textTransform": "uppercase",
                                            }
                                          }
                                          testID="main-balance-test-id"
                                        >
                                          &lt; $0.01
                                        </Text>
                                      </View>
                                    </TouchableOpacity>
                                  </View>
                                </CellContainer>
                                <CellContainer
                                  index={1}
                                  onLayout={[Function]}
                                  style={
                                    {
                                      "alignItems": "stretch",
                                      "flexDirection": "column",
                                      "left": 0,
                                      "position": "absolute",
                                      "top": 50,
                                      "width": 400,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flexDirection": "column",
                                      }
                                    }
                                  >
                                    <TouchableOpacity
                                      onLongPress={[Function]}
                                      onPress={[Function]}
                                      style={
                                        {
                                          "alignItems": "flex-start",
                                          "flex": 1,
                                          "flexDirection": "row",
                                          "paddingHorizontal": 15,
                                          "paddingVertical": 10,
                                        }
                                      }
                                      testID="asset-BAT"
                                    >
                                      <View
                                        onLayout={[Function]}
                                        style={
                                          {
                                            "alignSelf": "flex-start",
                                            "position": "relative",
                                          }
                                        }
                                        testID="badge-wrapper-badge"
                                      >
                                        <View>
                                          <View
                                            style={
                                              {
                                                "backgroundColor": "#ffffff",
                                                "borderRadius": 16,
                                                "height": 32,
                                                "overflow": "hidden",
                                                "width": 32,
                                              }
                                            }
                                          >
                                            <Image
                                              onError={[Function]}
                                              resizeMode="contain"
                                              source={
                                                {
                                                  "uri": undefined,
                                                }
                                              }
                                              style={
                                                {
                                                  "flex": 1,
                                                  "height": undefined,
                                                  "width": undefined,
                                                }
                                              }
                                              testID="token-avatar-image"
                                            />
                                          </View>
                                        </View>
                                        <View
                                          style={
                                            {
                                              "alignItems": "center",
                                              "aspectRatio": 1,
                                              "height": 0,
                                              "justifyContent": "center",
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                              "transform": [
                                                {
                                                  "translateX": 0,
                                                },
                                                {
                                                  "translateY": -0,
                                                },
                                              ],
                                            }
                                          }
                                        >
                                          <View
                                            onLayout={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "aspectRatio": 1,
                                                "height": "50%",
                                                "justifyContent": "center",
                                                "maxHeight": 24,
                                                "minHeight": 8,
                                                "opacity": 0,
                                              }
                                            }
                                            testID="badgenetwork"
                                          >
                                            <View
                                              style={
                                                {
                                                  "alignItems": "center",
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#ffffff",
                                                  "borderRadius": 16,
                                                  "borderWidth": 2,
                                                  "height": 32,
                                                  "justifyContent": "center",
                                                  "overflow": "hidden",
                                                  "shadowColor": "#0000001a",
                                                  "shadowOffset": {
                                                    "height": 2,
                                                    "width": 0,
                                                  },
                                                  "shadowOpacity": 1,
                                                  "shadowRadius": 4,
                                                  "transform": [
                                                    {
                                                      "scale": 1,
                                                    },
                                                  ],
                                                  "width": 32,
                                                }
                                              }
                                            >
                                              <Image
                                                onError={[Function]}
                                                resizeMode="contain"
                                                source={
                                                  {
                                                    "uri": "MockImage",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 32,
                                                    "width": 32,
                                                  }
                                                }
                                                testID="network-avatar-image"
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                      <View
                                        style={
                                          {
                                            "flex": 1,
                                            "justifyContent": "center",
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "flexDirection": "row",
                                            }
                                          }
                                        >
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#141618",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 16,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                              }
                                            }
                                          >
                                            Bat
                                          </Text>
                                        </View>
                                        <View>
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#d73847",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 14,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 22,
                                              }
                                            }
                                          />
                                        </View>
                                      </View>
                                      <Modal
                                        animationType="none"
                                        deviceHeight={null}
                                        deviceWidth={null}
                                        hardwareAccelerated={false}
                                        hideModalContentWhileAnimating={false}
                                        onBackdropPress={[Function]}
                                        onModalHide={[Function]}
                                        onModalWillHide={[Function]}
                                        onModalWillShow={[Function]}
                                        onRequestClose={[Function]}
                                        onSwipeComplete={[Function]}
                                        panResponderThreshold={4}
                                        scrollHorizontal={false}
                                        scrollOffset={0}
                                        scrollOffsetMax={0}
                                        scrollTo={null}
                                        statusBarTranslucent={false}
                                        supportedOrientations={
                                          [
                                            "portrait",
                                            "landscape",
                                          ]
                                        }
                                        swipeDirection="down"
                                        swipeThreshold={100}
                                        transparent={true}
                                        visible={false}
                                      />
                                      <View
                                        style={
                                          {
                                            "alignItems": "flex-end",
                                            "alignSelf": "flex-end",
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#141618",
                                              "fontFamily": "EuclidCircularB-Medium",
                                              "fontSize": 16,
                                              "fontWeight": "500",
                                              "letterSpacing": 0,
                                              "lineHeight": 24,
                                            }
                                          }
                                          testID="fiat-balance-test-id"
                                        >
                                          &lt; 0.00001 BAT
                                        </Text>
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#6a737d",
                                              "fontFamily": "EuclidCircularB-Regular",
                                              "fontSize": 14,
                                              "fontWeight": "400",
                                              "letterSpacing": 0,
                                              "lineHeight": 22,
                                              "paddingHorizontal": 0,
                                              "textTransform": "uppercase",
                                            }
                                          }
                                          testID="main-balance-test-id"
                                        >
                                          $0
                                        </Text>
                                      </View>
                                    </TouchableOpacity>
                                  </View>
                                </CellContainer>
                              </AutoLayoutView>
                              <CellContainer
                                index={-1}
                                style={
                                  [
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "marginTop": 9,
                                      "paddingBottom": 30,
                                    }
                                  }
                                >
                                  <TouchableOpacity
                                    disabled={false}
                                    onPress={[Function]}
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                    testID="import-token-footer-link"
                                  >
                                    <Text
                                      accessibilityRole="text"
                                      style={
                                        {
                                          "color": "#141618",
                                          "fontFamily": "EuclidCircularB-Regular",
                                          "fontSize": 14,
                                          "fontWeight": "400",
                                          "letterSpacing": 0,
                                          "lineHeight": 22,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      <Text
                                        accessibilityRole="text"
                                        style={
                                          {
                                            "color": "#6a737d",
                                            "fontFamily": "EuclidCircularB-Regular",
                                            "fontSize": 14,
                                            "fontWeight": "400",
                                            "letterSpacing": 0,
                                            "lineHeight": 22,
                                            "marginBottom": 8,
                                          }
                                        }
                                      >
                                        Don't see your token?
                                      </Text>
                                       
                                      <Text
                                        accessibilityRole="text"
                                        style={
                                          {
                                            "color": "#0376c9",
                                            "fontFamily": "EuclidCircularB-Regular",
                                            "fontSize": 14,
                                            "fontWeight": "400",
                                            "letterSpacing": 0,
                                            "lineHeight": 22,
                                          }
                                        }
                                      >
                                        Import tokens
                                      </Text>
                                    </Text>
                                  </TouchableOpacity>
                                </View>
                              </CellContainer>
                              <View
                                style={
                                  {
                                    "paddingBottom": 0,
                                    "paddingRight": 0,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;

exports[`Tokens should hide zero balance tokens when setting is on 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                collapsable={false}
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                Amount
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        collapsable={false}
        gestureResponseDistance={
          {
            "bottom": -1,
            "end": -1,
            "start": -1,
            "top": -1,
          }
        }
        pointerEvents="box-none"
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            [
              {
                "overflow": undefined,
              },
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            {
              "close": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                {
                  "flex": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                    {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="none"
                style={
                  {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  [
                    {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    [
                      {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "backgroundColor": "#ffffff",
                          "flex": 1,
                        }
                      }
                      testID="tokens"
                    >
                      <View
                        style={
                          {
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                            "paddingBottom": 16,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingTop": 8,
                          }
                        }
                      >
                        <TouchableOpacity
                          accessibilityRole="button"
                          accessible={true}
                          activeOpacity={1}
                          onPress={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "alignSelf": "flex-start",
                              "backgroundColor": "#ffffff",
                              "borderColor": "#bbc0c5",
                              "borderRadius": 20,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "flexDirection": "row",
                              "height": 40,
                              "justifyContent": "center",
                              "marginLeft": 5,
                              "marginRight": 5,
                              "maxWidth": "60%",
                              "paddingHorizontal": 16,
                            }
                          }
                          testID="sort-by"
                        >
                          <Text
                            accessibilityRole="none"
                            style={
                              {
                                "color": "#141618",
                                "fontFamily": "EuclidCircularB-Medium",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0,
                                "lineHeight": 22,
                              }
                            }
                          >
                            Sort by
                          </Text>
                          <SvgMock
                            color="#141618"
                            height={16}
                            name="ArrowDown"
                            style={
                              {
                                "height": 16,
                                "marginLeft": 8,
                                "width": 16,
                              }
                            }
                            width={16}
                          />
                        </TouchableOpacity>
                        <TouchableOpacity
                          accessibilityRole="button"
                          accessible={true}
                          activeOpacity={1}
                          onPress={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "alignSelf": "flex-start",
                              "backgroundColor": "#ffffff",
                              "borderColor": "#bbc0c5",
                              "borderRadius": 20,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "flexDirection": "row",
                              "height": 40,
                              "justifyContent": "center",
                              "marginLeft": 5,
                              "marginRight": 5,
                              "maxWidth": "60%",
                              "paddingHorizontal": 16,
                            }
                          }
                          testID="import-token-button"
                        >
                          <SvgMock
                            color="#141618"
                            height={16}
                            name="Add"
                            style={
                              {
                                "height": 16,
                                "marginRight": 8,
                                "width": 16,
                              }
                            }
                            width={16}
                          />
                          <Text
                            accessibilityRole="none"
                            style={
                              {
                                "color": "#141618",
                                "fontFamily": "EuclidCircularB-Medium",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0,
                                "lineHeight": 22,
                              }
                            }
                          >
                            Import
                          </Text>
                        </TouchableOpacity>
                      </View>
                      <View
                        style={
                          {
                            "flex": 1,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <RCTScrollView
                          ListFooterComponent={
                            <TokenListFooter
                              goToAddToken={[Function]}
                              isAddTokenEnabled={true}
                              showDetectedTokens={[Function]}
                              tokens={
                                [
                                  {
                                    "address": "0x0",
                                    "balanceFiat": "< $0.01",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "isETH": true,
                                    "isStaked": false,
                                    "name": "Ethereum",
                                    "symbol": "ETH",
                                    "tokenFiatAmount": NaN,
                                  },
                                  {
                                    "address": "0x01",
                                    "balanceFiat": "$0",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "name": "Bat",
                                    "symbol": "BAT",
                                    "tokenFiatAmount": 0,
                                  },
                                ]
                              }
                            />
                          }
                          applyWindowCorrection={[Function]}
                          canChangeSize={true}
                          contentContainerStyle={
                            {
                              "backgroundColor": undefined,
                              "minHeight": 1,
                              "minWidth": 1,
                              "paddingLeft": 0,
                              "paddingRight": 0,
                            }
                          }
                          contentHeight={100}
                          contentWidth={400}
                          data={
                            [
                              {
                                "address": "0x0",
                                "balanceFiat": "< $0.01",
                                "decimals": 18,
                                "iconUrl": "",
                                "isETH": true,
                                "isStaked": false,
                                "name": "Ethereum",
                                "symbol": "ETH",
                                "tokenFiatAmount": NaN,
                              },
                              {
                                "address": "0x01",
                                "balanceFiat": "$0",
                                "decimals": 18,
                                "iconUrl": "",
                                "name": "Bat",
                                "symbol": "BAT",
                                "tokenFiatAmount": 0,
                              },
                            ]
                          }
                          dataProvider={
                            DataProvider {
                              "_data": [
                                {
                                  "address": "0x0",
                                  "balanceFiat": "< $0.01",
                                  "decimals": 18,
                                  "iconUrl": "",
                                  "isETH": true,
                                  "isStaked": false,
                                  "name": "Ethereum",
                                  "symbol": "ETH",
                                  "tokenFiatAmount": NaN,
                                },
                                {
                                  "address": "0x01",
                                  "balanceFiat": "$0",
                                  "decimals": 18,
                                  "iconUrl": "",
                                  "name": "Bat",
                                  "symbol": "BAT",
                                  "tokenFiatAmount": 0,
                                },
                              ],
                              "_firstIndexToProcess": 0,
                              "_hasStableIds": true,
                              "_requiresDataChangeHandling": false,
                              "_size": 2,
                              "getStableId": [Function],
                              "rowHasChanged": [Function],
                            }
                          }
                          disableRecycling={false}
                          estimatedItemSize={50}
                          extendedState={{}}
                          externalScrollView={[Function]}
                          finalRenderAheadOffset={250}
                          forceNonDeterministicRendering={true}
                          horizontal={false}
                          initialOffset={0}
                          initialRenderIndex={0}
                          isHorizontal={false}
                          keyExtractor={[Function]}
                          layoutProvider={
                            GridLayoutProviderWithProps {
                              "_acceptableRelayoutDelta": 1,
                              "_getHeightOrWidth": [Function],
                              "_getLayoutTypeForIndex": [Function],
                              "_getSpan": [Function],
                              "_hasExpired": false,
                              "_isHorizontal": false,
                              "_lastLayoutManager": GridLayoutManager {
                                "_acceptableRelayoutDelta": 1,
                                "_getSpan": [Function],
                                "_isGridHorizontal": false,
                                "_isHorizontal": false,
                                "_layoutProvider": [Circular],
                                "_layouts": [
                                  {
                                    "height": 50,
                                    "type": 0,
                                    "width": 400,
                                    "x": 0,
                                    "y": 0,
                                  },
                                  {
                                    "height": 50,
                                    "type": 0,
                                    "width": 400,
                                    "x": 0,
                                    "y": 50,
                                  },
                                ],
                                "_maxSpan": 1,
                                "_renderWindowSize": {
                                  "height": 900,
                                  "width": 400,
                                },
                                "_totalHeight": 100,
                                "_totalWidth": 400,
                                "_window": {
                                  "height": 900,
                                  "width": 400,
                                },
                              },
                              "_maxSpan": 1,
                              "_renderWindowSize": {
                                "height": 900,
                                "width": 400,
                              },
                              "_setLayoutForType": [Function],
                              "_tempDim": {
                                "height": 0,
                                "width": 0,
                              },
                              "averageWindow": AverageWindow {
                                "currentAverage": 50,
                                "currentCount": 1,
                                "inputValues": [
                                  50,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                ],
                                "nextIndex": 1,
                              },
                              "defaultEstimatedItemSize": 100,
                              "layoutObject": {
                                "size": undefined,
                                "span": undefined,
                              },
                              "props": {
                                "ListFooterComponent": <TokenListFooter
                                  goToAddToken={[Function]}
                                  isAddTokenEnabled={true}
                                  showDetectedTokens={[Function]}
                                  tokens={
                                    [
                                      {
                                        "address": "0x0",
                                        "balanceFiat": "< $0.01",
                                        "decimals": 18,
                                        "iconUrl": "",
                                        "isETH": true,
                                        "isStaked": false,
                                        "name": "Ethereum",
                                        "symbol": "ETH",
                                        "tokenFiatAmount": NaN,
                                      },
                                      {
                                        "address": "0x01",
                                        "balanceFiat": "$0",
                                        "decimals": 18,
                                        "iconUrl": "",
                                        "name": "Bat",
                                        "symbol": "BAT",
                                        "tokenFiatAmount": 0,
                                      },
                                    ]
                                  }
                                />,
                                "data": [
                                  {
                                    "address": "0x0",
                                    "balanceFiat": "< $0.01",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "isETH": true,
                                    "isStaked": false,
                                    "name": "Ethereum",
                                    "symbol": "ETH",
                                    "tokenFiatAmount": NaN,
                                  },
                                  {
                                    "address": "0x01",
                                    "balanceFiat": "$0",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "name": "Bat",
                                    "symbol": "BAT",
                                    "tokenFiatAmount": 0,
                                  },
                                ],
                                "estimatedItemSize": 50,
                                "keyExtractor": [Function],
                                "numColumns": 1,
                                "refreshControl": <RefreshControlMock
                                  colors={
                                    [
                                      "#0376c9",
                                    ]
                                  }
                                  onRefresh={[Function]}
                                  refreshing={false}
                                  tintColor="#141618"
                                />,
                                "renderItem": [Function],
                                "testID": "token-list",
                              },
                              "renderWindowInsets": {
                                "height": 0,
                                "width": 0,
                              },
                              "shouldRefreshWithAnchoring": true,
                            }
                          }
                          maxRenderAhead={750}
                          numColumns={1}
                          onEndReached={[Function]}
                          onEndReachedThreshold={0}
                          onEndReachedThresholdRelative={0}
                          onItemLayout={[Function]}
                          onLayout={[Function]}
                          onScroll={[Function]}
                          onScrollBeginDrag={[Function]}
                          onSizeChanged={[Function]}
                          onVisibleIndicesChanged={[Function]}
                          refreshControl={
                            <RefreshControlMock
                              colors={
                                [
                                  "#0376c9",
                                ]
                              }
                              onRefresh={[Function]}
                              refreshing={false}
                              tintColor="#141618"
                            />
                          }
                          removeClippedSubviews={false}
                          renderAheadOffset={0}
                          renderAheadStep={250}
                          renderContentContainer={[Function]}
                          renderItem={[Function]}
                          renderItemContainer={[Function]}
                          rowRenderer={[Function]}
                          scrollEventThrottle={16}
                          scrollThrottle={16}
                          scrollViewProps={
                            {
                              "contentContainerStyle": {
                                "backgroundColor": undefined,
                                "minHeight": 1,
                                "minWidth": 1,
                                "paddingLeft": 0,
                                "paddingRight": 0,
                              },
                              "onLayout": [Function],
                              "onScrollBeginDrag": [Function],
                              "refreshControl": <RefreshControlMock
                                colors={
                                  [
                                    "#0376c9",
                                  ]
                                }
                                onRefresh={[Function]}
                                refreshing={false}
                                tintColor="#141618"
                              />,
                              "style": {
                                "minHeight": 1,
                                "minWidth": 1,
                              },
                            }
                          }
                          style={
                            {
                              "minHeight": 1,
                              "minWidth": 1,
                            }
                          }
                          suppressBoundedSizeException={true}
                          testID="token-list"
                          windowCorrectionConfig={
                            {
                              "applyToInitialOffset": true,
                              "applyToItemScroll": true,
                              "value": {
                                "endCorrection": 0,
                                "startCorrection": 0,
                                "windowShift": -0,
                              },
                            }
                          }
                        >
                          <RCTRefreshControl />
                          <View>
                            <View
                              style={
                                {
                                  "flexDirection": "column",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "paddingLeft": 0,
                                    "paddingTop": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  [
                                    undefined,
                                    undefined,
                                  ]
                                }
                              />
                              <AutoLayoutView
                                enableInstrumentation={false}
                                horizontal={false}
                                onBlankAreaEvent={[Function]}
                                onLayout={[Function]}
                                renderAheadOffset={0}
                                scrollOffset={0}
                                style={
                                  {
                                    "height": 100,
                                    "width": 400,
                                  }
                                }
                                windowSize={900}
                              >
                                <CellContainer
                                  index={0}
                                  onLayout={[Function]}
                                  style={
                                    {
                                      "alignItems": "stretch",
                                      "flexDirection": "column",
                                      "left": 0,
                                      "position": "absolute",
                                      "top": 0,
                                      "width": 400,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flexDirection": "column",
                                      }
                                    }
                                  >
                                    <TouchableOpacity
                                      onLongPress={[Function]}
                                      onPress={[Function]}
                                      style={
                                        {
                                          "alignItems": "flex-start",
                                          "flex": 1,
                                          "flexDirection": "row",
                                          "paddingHorizontal": 15,
                                          "paddingVertical": 10,
                                        }
                                      }
                                      testID="asset-ETH"
                                    >
                                      <View
                                        onLayout={[Function]}
                                        style={
                                          {
                                            "alignSelf": "flex-start",
                                            "position": "relative",
                                          }
                                        }
                                        testID="badge-wrapper-badge"
                                      >
                                        <View>
                                          <View
                                            useNativeDriver={true}
                                          >
                                            <Image
                                              fadeIn={true}
                                              onError={[Function]}
                                              onLoadEnd={[Function]}
                                              source={
                                                {
                                                  "uri": "",
                                                }
                                              }
                                              style={
                                                [
                                                  {
                                                    "borderRadius": 12,
                                                    "height": 24,
                                                    "width": 24,
                                                  },
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  {
                                                    "borderRadius": 16,
                                                    "height": 32,
                                                    "overflow": "hidden",
                                                    "width": 32,
                                                  },
                                                ]
                                              }
                                            />
                                            <View
                                              collapsable={false}
                                              style={
                                                {
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 1,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  [
                                                    {
                                                      "borderRadius": 16,
                                                      "height": 32,
                                                      "overflow": "hidden",
                                                      "width": 32,
                                                    },
                                                    {
                                                      "backgroundColor": "#eee",
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                        <View
                                          style={
                                            {
                                              "alignItems": "center",
                                              "aspectRatio": 1,
                                              "height": 0,
                                              "justifyContent": "center",
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                              "transform": [
                                                {
                                                  "translateX": 0,
                                                },
                                                {
                                                  "translateY": -0,
                                                },
                                              ],
                                            }
                                          }
                                        >
                                          <View
                                            onLayout={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "aspectRatio": 1,
                                                "height": "50%",
                                                "justifyContent": "center",
                                                "maxHeight": 24,
                                                "minHeight": 8,
                                                "opacity": 0,
                                              }
                                            }
                                            testID="badgenetwork"
                                          >
                                            <View
                                              style={
                                                {
                                                  "alignItems": "center",
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#ffffff",
                                                  "borderRadius": 16,
                                                  "borderWidth": 2,
                                                  "height": 32,
                                                  "justifyContent": "center",
                                                  "overflow": "hidden",
                                                  "shadowColor": "#0000001a",
                                                  "shadowOffset": {
                                                    "height": 2,
                                                    "width": 0,
                                                  },
                                                  "shadowOpacity": 1,
                                                  "shadowRadius": 4,
                                                  "transform": [
                                                    {
                                                      "scale": 1,
                                                    },
                                                  ],
                                                  "width": 32,
                                                }
                                              }
                                            >
                                              <Image
                                                onError={[Function]}
                                                resizeMode="contain"
                                                source={
                                                  {
                                                    "uri": "MockImage",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 32,
                                                    "width": 32,
                                                  }
                                                }
                                                testID="network-avatar-image"
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                      <View
                                        style={
                                          {
                                            "flex": 1,
                                            "justifyContent": "center",
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "flexDirection": "row",
                                            }
                                          }
                                        >
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#141618",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 16,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                              }
                                            }
                                          >
                                            Ethereum
                                          </Text>
                                          <View
                                            accessibilityState={
                                              {
                                                "busy": undefined,
                                                "checked": undefined,
                                                "disabled": undefined,
                                                "expanded": undefined,
                                                "selected": undefined,
                                              }
                                            }
                                            accessibilityValue={
                                              {
                                                "max": undefined,
                                                "min": undefined,
                                                "now": undefined,
                                                "text": undefined,
                                              }
                                            }
                                            accessible={true}
                                            collapsable={false}
                                            focusable={true}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "flexDirection": "row",
                                              }
                                            }
                                            testID="stake-button"
                                          >
                                            <Text
                                              accessibilityRole="text"
                                              style={
                                                {
                                                  "color": "#141618",
                                                  "fontFamily": "EuclidCircularB-Medium",
                                                  "fontSize": 16,
                                                  "fontWeight": "500",
                                                  "letterSpacing": 0,
                                                  "lineHeight": 24,
                                                }
                                              }
                                            >
                                               • 
                                              <Text
                                                accessibilityRole="text"
                                                style={
                                                  {
                                                    "color": "#0376c9",
                                                    "fontFamily": "EuclidCircularB-Medium",
                                                    "fontSize": 16,
                                                    "fontWeight": "500",
                                                    "letterSpacing": 0,
                                                    "lineHeight": 24,
                                                  }
                                                }
                                              >
                                                Earn 
                                              </Text>
                                            </Text>
                                            <SvgMock
                                              color="#0376c9"
                                              height={16}
                                              name="Plant"
                                              style={
                                                {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                              width={16}
                                            />
                                          </View>
                                        </View>
                                        <View>
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#d73847",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 14,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 22,
                                              }
                                            }
                                          />
                                        </View>
                                      </View>
                                      <Modal
                                        animationType="none"
                                        deviceHeight={null}
                                        deviceWidth={null}
                                        hardwareAccelerated={false}
                                        hideModalContentWhileAnimating={false}
                                        onBackdropPress={[Function]}
                                        onModalHide={[Function]}
                                        onModalWillHide={[Function]}
                                        onModalWillShow={[Function]}
                                        onRequestClose={[Function]}
                                        onSwipeComplete={[Function]}
                                        panResponderThreshold={4}
                                        scrollHorizontal={false}
                                        scrollOffset={0}
                                        scrollOffsetMax={0}
                                        scrollTo={null}
                                        statusBarTranslucent={false}
                                        supportedOrientations={
                                          [
                                            "portrait",
                                            "landscape",
                                          ]
                                        }
                                        swipeDirection="down"
                                        swipeThreshold={100}
                                        transparent={true}
                                        visible={false}
                                      />
                                      <View
                                        style={
                                          {
                                            "alignItems": "flex-end",
                                            "alignSelf": "flex-end",
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#141618",
                                              "fontFamily": "EuclidCircularB-Medium",
                                              "fontSize": 16,
                                              "fontWeight": "500",
                                              "letterSpacing": 0,
                                              "lineHeight": 24,
                                            }
                                          }
                                          testID="fiat-balance-test-id"
                                        >
                                           ETH
                                        </Text>
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#6a737d",
                                              "fontFamily": "EuclidCircularB-Regular",
                                              "fontSize": 14,
                                              "fontWeight": "400",
                                              "letterSpacing": 0,
                                              "lineHeight": 22,
                                              "paddingHorizontal": 0,
                                              "textTransform": "uppercase",
                                            }
                                          }
                                          testID="main-balance-test-id"
                                        >
                                          &lt; $0.01
                                        </Text>
                                      </View>
                                    </TouchableOpacity>
                                  </View>
                                </CellContainer>
                                <CellContainer
                                  index={1}
                                  onLayout={[Function]}
                                  style={
                                    {
                                      "alignItems": "stretch",
                                      "flexDirection": "column",
                                      "left": 0,
                                      "position": "absolute",
                                      "top": 50,
                                      "width": 400,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flexDirection": "column",
                                      }
                                    }
                                  >
                                    <TouchableOpacity
                                      onLongPress={[Function]}
                                      onPress={[Function]}
                                      style={
                                        {
                                          "alignItems": "flex-start",
                                          "flex": 1,
                                          "flexDirection": "row",
                                          "paddingHorizontal": 15,
                                          "paddingVertical": 10,
                                        }
                                      }
                                      testID="asset-BAT"
                                    >
                                      <View
                                        onLayout={[Function]}
                                        style={
                                          {
                                            "alignSelf": "flex-start",
                                            "position": "relative",
                                          }
                                        }
                                        testID="badge-wrapper-badge"
                                      >
                                        <View>
                                          <View
                                            style={
                                              {
                                                "backgroundColor": "#ffffff",
                                                "borderRadius": 16,
                                                "height": 32,
                                                "overflow": "hidden",
                                                "width": 32,
                                              }
                                            }
                                          >
                                            <Image
                                              onError={[Function]}
                                              resizeMode="contain"
                                              source={
                                                {
                                                  "uri": undefined,
                                                }
                                              }
                                              style={
                                                {
                                                  "flex": 1,
                                                  "height": undefined,
                                                  "width": undefined,
                                                }
                                              }
                                              testID="token-avatar-image"
                                            />
                                          </View>
                                        </View>
                                        <View
                                          style={
                                            {
                                              "alignItems": "center",
                                              "aspectRatio": 1,
                                              "height": 0,
                                              "justifyContent": "center",
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                              "transform": [
                                                {
                                                  "translateX": 0,
                                                },
                                                {
                                                  "translateY": -0,
                                                },
                                              ],
                                            }
                                          }
                                        >
                                          <View
                                            onLayout={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "aspectRatio": 1,
                                                "height": "50%",
                                                "justifyContent": "center",
                                                "maxHeight": 24,
                                                "minHeight": 8,
                                                "opacity": 0,
                                              }
                                            }
                                            testID="badgenetwork"
                                          >
                                            <View
                                              style={
                                                {
                                                  "alignItems": "center",
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#ffffff",
                                                  "borderRadius": 16,
                                                  "borderWidth": 2,
                                                  "height": 32,
                                                  "justifyContent": "center",
                                                  "overflow": "hidden",
                                                  "shadowColor": "#0000001a",
                                                  "shadowOffset": {
                                                    "height": 2,
                                                    "width": 0,
                                                  },
                                                  "shadowOpacity": 1,
                                                  "shadowRadius": 4,
                                                  "transform": [
                                                    {
                                                      "scale": 1,
                                                    },
                                                  ],
                                                  "width": 32,
                                                }
                                              }
                                            >
                                              <Image
                                                onError={[Function]}
                                                resizeMode="contain"
                                                source={
                                                  {
                                                    "uri": "MockImage",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 32,
                                                    "width": 32,
                                                  }
                                                }
                                                testID="network-avatar-image"
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                      <View
                                        style={
                                          {
                                            "flex": 1,
                                            "justifyContent": "center",
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "flexDirection": "row",
                                            }
                                          }
                                        >
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#141618",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 16,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                              }
                                            }
                                          >
                                            Bat
                                          </Text>
                                        </View>
                                        <View>
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#d73847",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 14,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 22,
                                              }
                                            }
                                          />
                                        </View>
                                      </View>
                                      <Modal
                                        animationType="none"
                                        deviceHeight={null}
                                        deviceWidth={null}
                                        hardwareAccelerated={false}
                                        hideModalContentWhileAnimating={false}
                                        onBackdropPress={[Function]}
                                        onModalHide={[Function]}
                                        onModalWillHide={[Function]}
                                        onModalWillShow={[Function]}
                                        onRequestClose={[Function]}
                                        onSwipeComplete={[Function]}
                                        panResponderThreshold={4}
                                        scrollHorizontal={false}
                                        scrollOffset={0}
                                        scrollOffsetMax={0}
                                        scrollTo={null}
                                        statusBarTranslucent={false}
                                        supportedOrientations={
                                          [
                                            "portrait",
                                            "landscape",
                                          ]
                                        }
                                        swipeDirection="down"
                                        swipeThreshold={100}
                                        transparent={true}
                                        visible={false}
                                      />
                                      <View
                                        style={
                                          {
                                            "alignItems": "flex-end",
                                            "alignSelf": "flex-end",
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#141618",
                                              "fontFamily": "EuclidCircularB-Medium",
                                              "fontSize": 16,
                                              "fontWeight": "500",
                                              "letterSpacing": 0,
                                              "lineHeight": 24,
                                            }
                                          }
                                          testID="fiat-balance-test-id"
                                        >
                                          &lt; 0.00001 BAT
                                        </Text>
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#6a737d",
                                              "fontFamily": "EuclidCircularB-Regular",
                                              "fontSize": 14,
                                              "fontWeight": "400",
                                              "letterSpacing": 0,
                                              "lineHeight": 22,
                                              "paddingHorizontal": 0,
                                              "textTransform": "uppercase",
                                            }
                                          }
                                          testID="main-balance-test-id"
                                        >
                                          $0
                                        </Text>
                                      </View>
                                    </TouchableOpacity>
                                  </View>
                                </CellContainer>
                              </AutoLayoutView>
                              <CellContainer
                                index={-1}
                                style={
                                  [
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "marginTop": 9,
                                      "paddingBottom": 30,
                                    }
                                  }
                                >
                                  <TouchableOpacity
                                    disabled={false}
                                    onPress={[Function]}
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                    testID="import-token-footer-link"
                                  >
                                    <Text
                                      accessibilityRole="text"
                                      style={
                                        {
                                          "color": "#141618",
                                          "fontFamily": "EuclidCircularB-Regular",
                                          "fontSize": 14,
                                          "fontWeight": "400",
                                          "letterSpacing": 0,
                                          "lineHeight": 22,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      <Text
                                        accessibilityRole="text"
                                        style={
                                          {
                                            "color": "#6a737d",
                                            "fontFamily": "EuclidCircularB-Regular",
                                            "fontSize": 14,
                                            "fontWeight": "400",
                                            "letterSpacing": 0,
                                            "lineHeight": 22,
                                            "marginBottom": 8,
                                          }
                                        }
                                      >
                                        Don't see your token?
                                      </Text>
                                       
                                      <Text
                                        accessibilityRole="text"
                                        style={
                                          {
                                            "color": "#0376c9",
                                            "fontFamily": "EuclidCircularB-Regular",
                                            "fontSize": 14,
                                            "fontWeight": "400",
                                            "letterSpacing": 0,
                                            "lineHeight": 22,
                                          }
                                        }
                                      >
                                        Import tokens
                                      </Text>
                                    </Text>
                                  </TouchableOpacity>
                                </View>
                              </CellContainer>
                              <View
                                style={
                                  {
                                    "paddingBottom": 0,
                                    "paddingRight": 0,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;

exports[`Tokens should render correctly 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                collapsable={false}
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                Amount
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        collapsable={false}
        gestureResponseDistance={
          {
            "bottom": -1,
            "end": -1,
            "start": -1,
            "top": -1,
          }
        }
        pointerEvents="box-none"
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            [
              {
                "overflow": undefined,
              },
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            {
              "close": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                {
                  "flex": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                    {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="none"
                style={
                  {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  [
                    {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    [
                      {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "backgroundColor": "#ffffff",
                          "flex": 1,
                        }
                      }
                      testID="tokens"
                    >
                      <View
                        style={
                          {
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                            "paddingBottom": 16,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingTop": 8,
                          }
                        }
                      >
                        <TouchableOpacity
                          accessibilityRole="button"
                          accessible={true}
                          activeOpacity={1}
                          onPress={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "alignSelf": "flex-start",
                              "backgroundColor": "#ffffff",
                              "borderColor": "#bbc0c5",
                              "borderRadius": 20,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "flexDirection": "row",
                              "height": 40,
                              "justifyContent": "center",
                              "marginLeft": 5,
                              "marginRight": 5,
                              "maxWidth": "60%",
                              "paddingHorizontal": 16,
                            }
                          }
                          testID="sort-by"
                        >
                          <Text
                            accessibilityRole="none"
                            style={
                              {
                                "color": "#141618",
                                "fontFamily": "EuclidCircularB-Medium",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0,
                                "lineHeight": 22,
                              }
                            }
                          >
                            Sort by
                          </Text>
                          <SvgMock
                            color="#141618"
                            height={16}
                            name="ArrowDown"
                            style={
                              {
                                "height": 16,
                                "marginLeft": 8,
                                "width": 16,
                              }
                            }
                            width={16}
                          />
                        </TouchableOpacity>
                        <TouchableOpacity
                          accessibilityRole="button"
                          accessible={true}
                          activeOpacity={1}
                          onPress={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "alignSelf": "flex-start",
                              "backgroundColor": "#ffffff",
                              "borderColor": "#bbc0c5",
                              "borderRadius": 20,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "flexDirection": "row",
                              "height": 40,
                              "justifyContent": "center",
                              "marginLeft": 5,
                              "marginRight": 5,
                              "maxWidth": "60%",
                              "paddingHorizontal": 16,
                            }
                          }
                          testID="import-token-button"
                        >
                          <SvgMock
                            color="#141618"
                            height={16}
                            name="Add"
                            style={
                              {
                                "height": 16,
                                "marginRight": 8,
                                "width": 16,
                              }
                            }
                            width={16}
                          />
                          <Text
                            accessibilityRole="none"
                            style={
                              {
                                "color": "#141618",
                                "fontFamily": "EuclidCircularB-Medium",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0,
                                "lineHeight": 22,
                              }
                            }
                          >
                            Import
                          </Text>
                        </TouchableOpacity>
                      </View>
                      <View
                        style={
                          {
                            "flex": 1,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <RCTScrollView
                          ListFooterComponent={
                            <TokenListFooter
                              goToAddToken={[Function]}
                              isAddTokenEnabled={true}
                              showDetectedTokens={[Function]}
                              tokens={
                                [
                                  {
                                    "address": "0x0",
                                    "balanceFiat": "< $0.01",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "isETH": true,
                                    "isStaked": false,
                                    "name": "Ethereum",
                                    "symbol": "ETH",
                                    "tokenFiatAmount": NaN,
                                  },
                                  {
                                    "address": "0x01",
                                    "balanceFiat": "$0",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "name": "Bat",
                                    "symbol": "BAT",
                                    "tokenFiatAmount": 0,
                                  },
                                ]
                              }
                            />
                          }
                          applyWindowCorrection={[Function]}
                          canChangeSize={true}
                          contentContainerStyle={
                            {
                              "backgroundColor": undefined,
                              "minHeight": 1,
                              "minWidth": 1,
                              "paddingLeft": 0,
                              "paddingRight": 0,
                            }
                          }
                          contentHeight={100}
                          contentWidth={400}
                          data={
                            [
                              {
                                "address": "0x0",
                                "balanceFiat": "< $0.01",
                                "decimals": 18,
                                "iconUrl": "",
                                "isETH": true,
                                "isStaked": false,
                                "name": "Ethereum",
                                "symbol": "ETH",
                                "tokenFiatAmount": NaN,
                              },
                              {
                                "address": "0x01",
                                "balanceFiat": "$0",
                                "decimals": 18,
                                "iconUrl": "",
                                "name": "Bat",
                                "symbol": "BAT",
                                "tokenFiatAmount": 0,
                              },
                            ]
                          }
                          dataProvider={
                            DataProvider {
                              "_data": [
                                {
                                  "address": "0x0",
                                  "balanceFiat": "< $0.01",
                                  "decimals": 18,
                                  "iconUrl": "",
                                  "isETH": true,
                                  "isStaked": false,
                                  "name": "Ethereum",
                                  "symbol": "ETH",
                                  "tokenFiatAmount": NaN,
                                },
                                {
                                  "address": "0x01",
                                  "balanceFiat": "$0",
                                  "decimals": 18,
                                  "iconUrl": "",
                                  "name": "Bat",
                                  "symbol": "BAT",
                                  "tokenFiatAmount": 0,
                                },
                              ],
                              "_firstIndexToProcess": 0,
                              "_hasStableIds": true,
                              "_requiresDataChangeHandling": false,
                              "_size": 2,
                              "getStableId": [Function],
                              "rowHasChanged": [Function],
                            }
                          }
                          disableRecycling={false}
                          estimatedItemSize={50}
                          extendedState={{}}
                          externalScrollView={[Function]}
                          finalRenderAheadOffset={250}
                          forceNonDeterministicRendering={true}
                          horizontal={false}
                          initialOffset={0}
                          initialRenderIndex={0}
                          isHorizontal={false}
                          keyExtractor={[Function]}
                          layoutProvider={
                            GridLayoutProviderWithProps {
                              "_acceptableRelayoutDelta": 1,
                              "_getHeightOrWidth": [Function],
                              "_getLayoutTypeForIndex": [Function],
                              "_getSpan": [Function],
                              "_hasExpired": false,
                              "_isHorizontal": false,
                              "_lastLayoutManager": GridLayoutManager {
                                "_acceptableRelayoutDelta": 1,
                                "_getSpan": [Function],
                                "_isGridHorizontal": false,
                                "_isHorizontal": false,
                                "_layoutProvider": [Circular],
                                "_layouts": [
                                  {
                                    "height": 50,
                                    "type": 0,
                                    "width": 400,
                                    "x": 0,
                                    "y": 0,
                                  },
                                  {
                                    "height": 50,
                                    "type": 0,
                                    "width": 400,
                                    "x": 0,
                                    "y": 50,
                                  },
                                ],
                                "_maxSpan": 1,
                                "_renderWindowSize": {
                                  "height": 900,
                                  "width": 400,
                                },
                                "_totalHeight": 100,
                                "_totalWidth": 400,
                                "_window": {
                                  "height": 900,
                                  "width": 400,
                                },
                              },
                              "_maxSpan": 1,
                              "_renderWindowSize": {
                                "height": 900,
                                "width": 400,
                              },
                              "_setLayoutForType": [Function],
                              "_tempDim": {
                                "height": 0,
                                "width": 0,
                              },
                              "averageWindow": AverageWindow {
                                "currentAverage": 50,
                                "currentCount": 1,
                                "inputValues": [
                                  50,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                ],
                                "nextIndex": 1,
                              },
                              "defaultEstimatedItemSize": 100,
                              "layoutObject": {
                                "size": undefined,
                                "span": undefined,
                              },
                              "props": {
                                "ListFooterComponent": <TokenListFooter
                                  goToAddToken={[Function]}
                                  isAddTokenEnabled={true}
                                  showDetectedTokens={[Function]}
                                  tokens={
                                    [
                                      {
                                        "address": "0x0",
                                        "balanceFiat": "< $0.01",
                                        "decimals": 18,
                                        "iconUrl": "",
                                        "isETH": true,
                                        "isStaked": false,
                                        "name": "Ethereum",
                                        "symbol": "ETH",
                                        "tokenFiatAmount": NaN,
                                      },
                                      {
                                        "address": "0x01",
                                        "balanceFiat": "$0",
                                        "decimals": 18,
                                        "iconUrl": "",
                                        "name": "Bat",
                                        "symbol": "BAT",
                                        "tokenFiatAmount": 0,
                                      },
                                    ]
                                  }
                                />,
                                "data": [
                                  {
                                    "address": "0x0",
                                    "balanceFiat": "< $0.01",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "isETH": true,
                                    "isStaked": false,
                                    "name": "Ethereum",
                                    "symbol": "ETH",
                                    "tokenFiatAmount": NaN,
                                  },
                                  {
                                    "address": "0x01",
                                    "balanceFiat": "$0",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "name": "Bat",
                                    "symbol": "BAT",
                                    "tokenFiatAmount": 0,
                                  },
                                ],
                                "estimatedItemSize": 50,
                                "keyExtractor": [Function],
                                "numColumns": 1,
                                "refreshControl": <RefreshControlMock
                                  colors={
                                    [
                                      "#0376c9",
                                    ]
                                  }
                                  onRefresh={[Function]}
                                  refreshing={false}
                                  tintColor="#141618"
                                />,
                                "renderItem": [Function],
                                "testID": "token-list",
                              },
                              "renderWindowInsets": {
                                "height": 0,
                                "width": 0,
                              },
                              "shouldRefreshWithAnchoring": true,
                            }
                          }
                          maxRenderAhead={750}
                          numColumns={1}
                          onEndReached={[Function]}
                          onEndReachedThreshold={0}
                          onEndReachedThresholdRelative={0}
                          onItemLayout={[Function]}
                          onLayout={[Function]}
                          onScroll={[Function]}
                          onScrollBeginDrag={[Function]}
                          onSizeChanged={[Function]}
                          onVisibleIndicesChanged={[Function]}
                          refreshControl={
                            <RefreshControlMock
                              colors={
                                [
                                  "#0376c9",
                                ]
                              }
                              onRefresh={[Function]}
                              refreshing={false}
                              tintColor="#141618"
                            />
                          }
                          removeClippedSubviews={false}
                          renderAheadOffset={0}
                          renderAheadStep={250}
                          renderContentContainer={[Function]}
                          renderItem={[Function]}
                          renderItemContainer={[Function]}
                          rowRenderer={[Function]}
                          scrollEventThrottle={16}
                          scrollThrottle={16}
                          scrollViewProps={
                            {
                              "contentContainerStyle": {
                                "backgroundColor": undefined,
                                "minHeight": 1,
                                "minWidth": 1,
                                "paddingLeft": 0,
                                "paddingRight": 0,
                              },
                              "onLayout": [Function],
                              "onScrollBeginDrag": [Function],
                              "refreshControl": <RefreshControlMock
                                colors={
                                  [
                                    "#0376c9",
                                  ]
                                }
                                onRefresh={[Function]}
                                refreshing={false}
                                tintColor="#141618"
                              />,
                              "style": {
                                "minHeight": 1,
                                "minWidth": 1,
                              },
                            }
                          }
                          style={
                            {
                              "minHeight": 1,
                              "minWidth": 1,
                            }
                          }
                          suppressBoundedSizeException={true}
                          testID="token-list"
                          windowCorrectionConfig={
                            {
                              "applyToInitialOffset": true,
                              "applyToItemScroll": true,
                              "value": {
                                "endCorrection": 0,
                                "startCorrection": 0,
                                "windowShift": -0,
                              },
                            }
                          }
                        >
                          <RCTRefreshControl />
                          <View>
                            <View
                              style={
                                {
                                  "flexDirection": "column",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "paddingLeft": 0,
                                    "paddingTop": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  [
                                    undefined,
                                    undefined,
                                  ]
                                }
                              />
                              <AutoLayoutView
                                enableInstrumentation={false}
                                horizontal={false}
                                onBlankAreaEvent={[Function]}
                                onLayout={[Function]}
                                renderAheadOffset={0}
                                scrollOffset={0}
                                style={
                                  {
                                    "height": 100,
                                    "width": 400,
                                  }
                                }
                                windowSize={900}
                              >
                                <CellContainer
                                  index={0}
                                  onLayout={[Function]}
                                  style={
                                    {
                                      "alignItems": "stretch",
                                      "flexDirection": "column",
                                      "left": 0,
                                      "position": "absolute",
                                      "top": 0,
                                      "width": 400,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flexDirection": "column",
                                      }
                                    }
                                  >
                                    <TouchableOpacity
                                      onLongPress={[Function]}
                                      onPress={[Function]}
                                      style={
                                        {
                                          "alignItems": "flex-start",
                                          "flex": 1,
                                          "flexDirection": "row",
                                          "paddingHorizontal": 15,
                                          "paddingVertical": 10,
                                        }
                                      }
                                      testID="asset-ETH"
                                    >
                                      <View
                                        onLayout={[Function]}
                                        style={
                                          {
                                            "alignSelf": "flex-start",
                                            "position": "relative",
                                          }
                                        }
                                        testID="badge-wrapper-badge"
                                      >
                                        <View>
                                          <View
                                            useNativeDriver={true}
                                          >
                                            <Image
                                              fadeIn={true}
                                              onError={[Function]}
                                              onLoadEnd={[Function]}
                                              source={
                                                {
                                                  "uri": "",
                                                }
                                              }
                                              style={
                                                [
                                                  {
                                                    "borderRadius": 12,
                                                    "height": 24,
                                                    "width": 24,
                                                  },
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  {
                                                    "borderRadius": 16,
                                                    "height": 32,
                                                    "overflow": "hidden",
                                                    "width": 32,
                                                  },
                                                ]
                                              }
                                            />
                                            <View
                                              collapsable={false}
                                              style={
                                                {
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 1,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  [
                                                    {
                                                      "borderRadius": 16,
                                                      "height": 32,
                                                      "overflow": "hidden",
                                                      "width": 32,
                                                    },
                                                    {
                                                      "backgroundColor": "#eee",
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                        <View
                                          style={
                                            {
                                              "alignItems": "center",
                                              "aspectRatio": 1,
                                              "height": 0,
                                              "justifyContent": "center",
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                              "transform": [
                                                {
                                                  "translateX": 0,
                                                },
                                                {
                                                  "translateY": -0,
                                                },
                                              ],
                                            }
                                          }
                                        >
                                          <View
                                            onLayout={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "aspectRatio": 1,
                                                "height": "50%",
                                                "justifyContent": "center",
                                                "maxHeight": 24,
                                                "minHeight": 8,
                                                "opacity": 0,
                                              }
                                            }
                                            testID="badgenetwork"
                                          >
                                            <View
                                              style={
                                                {
                                                  "alignItems": "center",
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#ffffff",
                                                  "borderRadius": 16,
                                                  "borderWidth": 2,
                                                  "height": 32,
                                                  "justifyContent": "center",
                                                  "overflow": "hidden",
                                                  "shadowColor": "#0000001a",
                                                  "shadowOffset": {
                                                    "height": 2,
                                                    "width": 0,
                                                  },
                                                  "shadowOpacity": 1,
                                                  "shadowRadius": 4,
                                                  "transform": [
                                                    {
                                                      "scale": 1,
                                                    },
                                                  ],
                                                  "width": 32,
                                                }
                                              }
                                            >
                                              <Image
                                                onError={[Function]}
                                                resizeMode="contain"
                                                source={
                                                  {
                                                    "uri": "MockImage",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 32,
                                                    "width": 32,
                                                  }
                                                }
                                                testID="network-avatar-image"
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                      <View
                                        style={
                                          {
                                            "flex": 1,
                                            "justifyContent": "center",
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "flexDirection": "row",
                                            }
                                          }
                                        >
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#141618",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 16,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                              }
                                            }
                                          >
                                            Ethereum
                                          </Text>
                                          <View
                                            accessibilityState={
                                              {
                                                "busy": undefined,
                                                "checked": undefined,
                                                "disabled": undefined,
                                                "expanded": undefined,
                                                "selected": undefined,
                                              }
                                            }
                                            accessibilityValue={
                                              {
                                                "max": undefined,
                                                "min": undefined,
                                                "now": undefined,
                                                "text": undefined,
                                              }
                                            }
                                            accessible={true}
                                            collapsable={false}
                                            focusable={true}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "flexDirection": "row",
                                              }
                                            }
                                            testID="stake-button"
                                          >
                                            <Text
                                              accessibilityRole="text"
                                              style={
                                                {
                                                  "color": "#141618",
                                                  "fontFamily": "EuclidCircularB-Medium",
                                                  "fontSize": 16,
                                                  "fontWeight": "500",
                                                  "letterSpacing": 0,
                                                  "lineHeight": 24,
                                                }
                                              }
                                            >
                                               • 
                                              <Text
                                                accessibilityRole="text"
                                                style={
                                                  {
                                                    "color": "#0376c9",
                                                    "fontFamily": "EuclidCircularB-Medium",
                                                    "fontSize": 16,
                                                    "fontWeight": "500",
                                                    "letterSpacing": 0,
                                                    "lineHeight": 24,
                                                  }
                                                }
                                              >
                                                Earn 
                                              </Text>
                                            </Text>
                                            <SvgMock
                                              color="#0376c9"
                                              height={16}
                                              name="Plant"
                                              style={
                                                {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                              width={16}
                                            />
                                          </View>
                                        </View>
                                        <View>
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#d73847",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 14,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 22,
                                              }
                                            }
                                          />
                                        </View>
                                      </View>
                                      <Modal
                                        animationType="none"
                                        deviceHeight={null}
                                        deviceWidth={null}
                                        hardwareAccelerated={false}
                                        hideModalContentWhileAnimating={false}
                                        onBackdropPress={[Function]}
                                        onModalHide={[Function]}
                                        onModalWillHide={[Function]}
                                        onModalWillShow={[Function]}
                                        onRequestClose={[Function]}
                                        onSwipeComplete={[Function]}
                                        panResponderThreshold={4}
                                        scrollHorizontal={false}
                                        scrollOffset={0}
                                        scrollOffsetMax={0}
                                        scrollTo={null}
                                        statusBarTranslucent={false}
                                        supportedOrientations={
                                          [
                                            "portrait",
                                            "landscape",
                                          ]
                                        }
                                        swipeDirection="down"
                                        swipeThreshold={100}
                                        transparent={true}
                                        visible={false}
                                      />
                                      <View
                                        style={
                                          {
                                            "alignItems": "flex-end",
                                            "alignSelf": "flex-end",
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#141618",
                                              "fontFamily": "EuclidCircularB-Medium",
                                              "fontSize": 16,
                                              "fontWeight": "500",
                                              "letterSpacing": 0,
                                              "lineHeight": 24,
                                            }
                                          }
                                          testID="fiat-balance-test-id"
                                        >
                                           ETH
                                        </Text>
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#6a737d",
                                              "fontFamily": "EuclidCircularB-Regular",
                                              "fontSize": 14,
                                              "fontWeight": "400",
                                              "letterSpacing": 0,
                                              "lineHeight": 22,
                                              "paddingHorizontal": 0,
                                              "textTransform": "uppercase",
                                            }
                                          }
                                          testID="main-balance-test-id"
                                        >
                                          &lt; $0.01
                                        </Text>
                                      </View>
                                    </TouchableOpacity>
                                  </View>
                                </CellContainer>
                                <CellContainer
                                  index={1}
                                  onLayout={[Function]}
                                  style={
                                    {
                                      "alignItems": "stretch",
                                      "flexDirection": "column",
                                      "left": 0,
                                      "position": "absolute",
                                      "top": 50,
                                      "width": 400,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flexDirection": "column",
                                      }
                                    }
                                  >
                                    <TouchableOpacity
                                      onLongPress={[Function]}
                                      onPress={[Function]}
                                      style={
                                        {
                                          "alignItems": "flex-start",
                                          "flex": 1,
                                          "flexDirection": "row",
                                          "paddingHorizontal": 15,
                                          "paddingVertical": 10,
                                        }
                                      }
                                      testID="asset-BAT"
                                    >
                                      <View
                                        onLayout={[Function]}
                                        style={
                                          {
                                            "alignSelf": "flex-start",
                                            "position": "relative",
                                          }
                                        }
                                        testID="badge-wrapper-badge"
                                      >
                                        <View>
                                          <View
                                            style={
                                              {
                                                "backgroundColor": "#ffffff",
                                                "borderRadius": 16,
                                                "height": 32,
                                                "overflow": "hidden",
                                                "width": 32,
                                              }
                                            }
                                          >
                                            <Image
                                              onError={[Function]}
                                              resizeMode="contain"
                                              source={
                                                {
                                                  "uri": undefined,
                                                }
                                              }
                                              style={
                                                {
                                                  "flex": 1,
                                                  "height": undefined,
                                                  "width": undefined,
                                                }
                                              }
                                              testID="token-avatar-image"
                                            />
                                          </View>
                                        </View>
                                        <View
                                          style={
                                            {
                                              "alignItems": "center",
                                              "aspectRatio": 1,
                                              "height": 0,
                                              "justifyContent": "center",
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                              "transform": [
                                                {
                                                  "translateX": 0,
                                                },
                                                {
                                                  "translateY": -0,
                                                },
                                              ],
                                            }
                                          }
                                        >
                                          <View
                                            onLayout={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "aspectRatio": 1,
                                                "height": "50%",
                                                "justifyContent": "center",
                                                "maxHeight": 24,
                                                "minHeight": 8,
                                                "opacity": 0,
                                              }
                                            }
                                            testID="badgenetwork"
                                          >
                                            <View
                                              style={
                                                {
                                                  "alignItems": "center",
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#ffffff",
                                                  "borderRadius": 16,
                                                  "borderWidth": 2,
                                                  "height": 32,
                                                  "justifyContent": "center",
                                                  "overflow": "hidden",
                                                  "shadowColor": "#0000001a",
                                                  "shadowOffset": {
                                                    "height": 2,
                                                    "width": 0,
                                                  },
                                                  "shadowOpacity": 1,
                                                  "shadowRadius": 4,
                                                  "transform": [
                                                    {
                                                      "scale": 1,
                                                    },
                                                  ],
                                                  "width": 32,
                                                }
                                              }
                                            >
                                              <Image
                                                onError={[Function]}
                                                resizeMode="contain"
                                                source={
                                                  {
                                                    "uri": "MockImage",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 32,
                                                    "width": 32,
                                                  }
                                                }
                                                testID="network-avatar-image"
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                      <View
                                        style={
                                          {
                                            "flex": 1,
                                            "justifyContent": "center",
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "flexDirection": "row",
                                            }
                                          }
                                        >
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#141618",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 16,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                              }
                                            }
                                          >
                                            Bat
                                          </Text>
                                        </View>
                                        <View>
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#d73847",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 14,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 22,
                                              }
                                            }
                                          />
                                        </View>
                                      </View>
                                      <Modal
                                        animationType="none"
                                        deviceHeight={null}
                                        deviceWidth={null}
                                        hardwareAccelerated={false}
                                        hideModalContentWhileAnimating={false}
                                        onBackdropPress={[Function]}
                                        onModalHide={[Function]}
                                        onModalWillHide={[Function]}
                                        onModalWillShow={[Function]}
                                        onRequestClose={[Function]}
                                        onSwipeComplete={[Function]}
                                        panResponderThreshold={4}
                                        scrollHorizontal={false}
                                        scrollOffset={0}
                                        scrollOffsetMax={0}
                                        scrollTo={null}
                                        statusBarTranslucent={false}
                                        supportedOrientations={
                                          [
                                            "portrait",
                                            "landscape",
                                          ]
                                        }
                                        swipeDirection="down"
                                        swipeThreshold={100}
                                        transparent={true}
                                        visible={false}
                                      />
                                      <View
                                        style={
                                          {
                                            "alignItems": "flex-end",
                                            "alignSelf": "flex-end",
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#141618",
                                              "fontFamily": "EuclidCircularB-Medium",
                                              "fontSize": 16,
                                              "fontWeight": "500",
                                              "letterSpacing": 0,
                                              "lineHeight": 24,
                                            }
                                          }
                                          testID="fiat-balance-test-id"
                                        >
                                          &lt; 0.00001 BAT
                                        </Text>
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#6a737d",
                                              "fontFamily": "EuclidCircularB-Regular",
                                              "fontSize": 14,
                                              "fontWeight": "400",
                                              "letterSpacing": 0,
                                              "lineHeight": 22,
                                              "paddingHorizontal": 0,
                                              "textTransform": "uppercase",
                                            }
                                          }
                                          testID="main-balance-test-id"
                                        >
                                          $0
                                        </Text>
                                      </View>
                                    </TouchableOpacity>
                                  </View>
                                </CellContainer>
                              </AutoLayoutView>
                              <CellContainer
                                index={-1}
                                style={
                                  [
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "marginTop": 9,
                                      "paddingBottom": 30,
                                    }
                                  }
                                >
                                  <TouchableOpacity
                                    disabled={false}
                                    onPress={[Function]}
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                    testID="import-token-footer-link"
                                  >
                                    <Text
                                      accessibilityRole="text"
                                      style={
                                        {
                                          "color": "#141618",
                                          "fontFamily": "EuclidCircularB-Regular",
                                          "fontSize": 14,
                                          "fontWeight": "400",
                                          "letterSpacing": 0,
                                          "lineHeight": 22,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      <Text
                                        accessibilityRole="text"
                                        style={
                                          {
                                            "color": "#6a737d",
                                            "fontFamily": "EuclidCircularB-Regular",
                                            "fontSize": 14,
                                            "fontWeight": "400",
                                            "letterSpacing": 0,
                                            "lineHeight": 22,
                                            "marginBottom": 8,
                                          }
                                        }
                                      >
                                        Don't see your token?
                                      </Text>
                                       
                                      <Text
                                        accessibilityRole="text"
                                        style={
                                          {
                                            "color": "#0376c9",
                                            "fontFamily": "EuclidCircularB-Regular",
                                            "fontSize": 14,
                                            "fontWeight": "400",
                                            "letterSpacing": 0,
                                            "lineHeight": 22,
                                          }
                                        }
                                      >
                                        Import tokens
                                      </Text>
                                    </Text>
                                  </TouchableOpacity>
                                </View>
                              </CellContainer>
                              <View
                                style={
                                  {
                                    "paddingBottom": 0,
                                    "paddingRight": 0,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;

exports[`Tokens should show all balance tokens when hideZeroBalanceTokens setting is off 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                collapsable={false}
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                Amount
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        collapsable={false}
        gestureResponseDistance={
          {
            "bottom": -1,
            "end": -1,
            "start": -1,
            "top": -1,
          }
        }
        pointerEvents="box-none"
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            [
              {
                "overflow": undefined,
              },
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            {
              "close": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                {
                  "flex": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                    {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="none"
                style={
                  {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  [
                    {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    [
                      {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "backgroundColor": "#ffffff",
                          "flex": 1,
                        }
                      }
                      testID="tokens"
                    >
                      <View
                        style={
                          {
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                            "paddingBottom": 16,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingTop": 8,
                          }
                        }
                      >
                        <TouchableOpacity
                          accessibilityRole="button"
                          accessible={true}
                          activeOpacity={1}
                          onPress={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "alignSelf": "flex-start",
                              "backgroundColor": "#ffffff",
                              "borderColor": "#bbc0c5",
                              "borderRadius": 20,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "flexDirection": "row",
                              "height": 40,
                              "justifyContent": "center",
                              "marginLeft": 5,
                              "marginRight": 5,
                              "maxWidth": "60%",
                              "paddingHorizontal": 16,
                            }
                          }
                          testID="sort-by"
                        >
                          <Text
                            accessibilityRole="none"
                            style={
                              {
                                "color": "#141618",
                                "fontFamily": "EuclidCircularB-Medium",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0,
                                "lineHeight": 22,
                              }
                            }
                          >
                            Sort by
                          </Text>
                          <SvgMock
                            color="#141618"
                            height={16}
                            name="ArrowDown"
                            style={
                              {
                                "height": 16,
                                "marginLeft": 8,
                                "width": 16,
                              }
                            }
                            width={16}
                          />
                        </TouchableOpacity>
                        <TouchableOpacity
                          accessibilityRole="button"
                          accessible={true}
                          activeOpacity={1}
                          onPress={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "alignSelf": "flex-start",
                              "backgroundColor": "#ffffff",
                              "borderColor": "#bbc0c5",
                              "borderRadius": 20,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "flexDirection": "row",
                              "height": 40,
                              "justifyContent": "center",
                              "marginLeft": 5,
                              "marginRight": 5,
                              "maxWidth": "60%",
                              "paddingHorizontal": 16,
                            }
                          }
                          testID="import-token-button"
                        >
                          <SvgMock
                            color="#141618"
                            height={16}
                            name="Add"
                            style={
                              {
                                "height": 16,
                                "marginRight": 8,
                                "width": 16,
                              }
                            }
                            width={16}
                          />
                          <Text
                            accessibilityRole="none"
                            style={
                              {
                                "color": "#141618",
                                "fontFamily": "EuclidCircularB-Medium",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0,
                                "lineHeight": 22,
                              }
                            }
                          >
                            Import
                          </Text>
                        </TouchableOpacity>
                      </View>
                      <View
                        style={
                          {
                            "flex": 1,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <RCTScrollView
                          ListFooterComponent={
                            <TokenListFooter
                              goToAddToken={[Function]}
                              isAddTokenEnabled={true}
                              showDetectedTokens={[Function]}
                              tokens={
                                [
                                  {
                                    "address": "0x0",
                                    "balanceFiat": "< $0.01",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "isETH": true,
                                    "isStaked": false,
                                    "name": "Ethereum",
                                    "symbol": "ETH",
                                    "tokenFiatAmount": NaN,
                                  },
                                  {
                                    "address": "0x01",
                                    "balanceFiat": "$0",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "name": "Bat",
                                    "symbol": "BAT",
                                    "tokenFiatAmount": 0,
                                  },
                                  {
                                    "address": "0x02",
                                    "balanceFiat": "$0",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "name": "Link",
                                    "symbol": "LINK",
                                    "tokenFiatAmount": 0,
                                  },
                                ]
                              }
                            />
                          }
                          applyWindowCorrection={[Function]}
                          canChangeSize={true}
                          contentContainerStyle={
                            {
                              "backgroundColor": undefined,
                              "minHeight": 1,
                              "minWidth": 1,
                              "paddingLeft": 0,
                              "paddingRight": 0,
                            }
                          }
                          contentHeight={150}
                          contentWidth={400}
                          data={
                            [
                              {
                                "address": "0x0",
                                "balanceFiat": "< $0.01",
                                "decimals": 18,
                                "iconUrl": "",
                                "isETH": true,
                                "isStaked": false,
                                "name": "Ethereum",
                                "symbol": "ETH",
                                "tokenFiatAmount": NaN,
                              },
                              {
                                "address": "0x01",
                                "balanceFiat": "$0",
                                "decimals": 18,
                                "iconUrl": "",
                                "name": "Bat",
                                "symbol": "BAT",
                                "tokenFiatAmount": 0,
                              },
                              {
                                "address": "0x02",
                                "balanceFiat": "$0",
                                "decimals": 18,
                                "iconUrl": "",
                                "name": "Link",
                                "symbol": "LINK",
                                "tokenFiatAmount": 0,
                              },
                            ]
                          }
                          dataProvider={
                            DataProvider {
                              "_data": [
                                {
                                  "address": "0x0",
                                  "balanceFiat": "< $0.01",
                                  "decimals": 18,
                                  "iconUrl": "",
                                  "isETH": true,
                                  "isStaked": false,
                                  "name": "Ethereum",
                                  "symbol": "ETH",
                                  "tokenFiatAmount": NaN,
                                },
                                {
                                  "address": "0x01",
                                  "balanceFiat": "$0",
                                  "decimals": 18,
                                  "iconUrl": "",
                                  "name": "Bat",
                                  "symbol": "BAT",
                                  "tokenFiatAmount": 0,
                                },
                                {
                                  "address": "0x02",
                                  "balanceFiat": "$0",
                                  "decimals": 18,
                                  "iconUrl": "",
                                  "name": "Link",
                                  "symbol": "LINK",
                                  "tokenFiatAmount": 0,
                                },
                              ],
                              "_firstIndexToProcess": 0,
                              "_hasStableIds": true,
                              "_requiresDataChangeHandling": false,
                              "_size": 3,
                              "getStableId": [Function],
                              "rowHasChanged": [Function],
                            }
                          }
                          disableRecycling={false}
                          estimatedItemSize={50}
                          extendedState={{}}
                          externalScrollView={[Function]}
                          finalRenderAheadOffset={250}
                          forceNonDeterministicRendering={true}
                          horizontal={false}
                          initialOffset={0}
                          initialRenderIndex={0}
                          isHorizontal={false}
                          keyExtractor={[Function]}
                          layoutProvider={
                            GridLayoutProviderWithProps {
                              "_acceptableRelayoutDelta": 1,
                              "_getHeightOrWidth": [Function],
                              "_getLayoutTypeForIndex": [Function],
                              "_getSpan": [Function],
                              "_hasExpired": false,
                              "_isHorizontal": false,
                              "_lastLayoutManager": GridLayoutManager {
                                "_acceptableRelayoutDelta": 1,
                                "_getSpan": [Function],
                                "_isGridHorizontal": false,
                                "_isHorizontal": false,
                                "_layoutProvider": [Circular],
                                "_layouts": [
                                  {
                                    "height": 50,
                                    "type": 0,
                                    "width": 400,
                                    "x": 0,
                                    "y": 0,
                                  },
                                  {
                                    "height": 50,
                                    "type": 0,
                                    "width": 400,
                                    "x": 0,
                                    "y": 50,
                                  },
                                  {
                                    "height": 50,
                                    "type": 0,
                                    "width": 400,
                                    "x": 0,
                                    "y": 100,
                                  },
                                ],
                                "_maxSpan": 1,
                                "_renderWindowSize": {
                                  "height": 900,
                                  "width": 400,
                                },
                                "_totalHeight": 150,
                                "_totalWidth": 400,
                                "_window": {
                                  "height": 900,
                                  "width": 400,
                                },
                              },
                              "_maxSpan": 1,
                              "_renderWindowSize": {
                                "height": 900,
                                "width": 400,
                              },
                              "_setLayoutForType": [Function],
                              "_tempDim": {
                                "height": 0,
                                "width": 0,
                              },
                              "averageWindow": AverageWindow {
                                "currentAverage": 50,
                                "currentCount": 1,
                                "inputValues": [
                                  50,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                  ,
                                ],
                                "nextIndex": 1,
                              },
                              "defaultEstimatedItemSize": 100,
                              "layoutObject": {
                                "size": undefined,
                                "span": undefined,
                              },
                              "props": {
                                "ListFooterComponent": <TokenListFooter
                                  goToAddToken={[Function]}
                                  isAddTokenEnabled={true}
                                  showDetectedTokens={[Function]}
                                  tokens={
                                    [
                                      {
                                        "address": "0x0",
                                        "balanceFiat": "< $0.01",
                                        "decimals": 18,
                                        "iconUrl": "",
                                        "isETH": true,
                                        "isStaked": false,
                                        "name": "Ethereum",
                                        "symbol": "ETH",
                                        "tokenFiatAmount": NaN,
                                      },
                                      {
                                        "address": "0x01",
                                        "balanceFiat": "$0",
                                        "decimals": 18,
                                        "iconUrl": "",
                                        "name": "Bat",
                                        "symbol": "BAT",
                                        "tokenFiatAmount": 0,
                                      },
                                      {
                                        "address": "0x02",
                                        "balanceFiat": "$0",
                                        "decimals": 18,
                                        "iconUrl": "",
                                        "name": "Link",
                                        "symbol": "LINK",
                                        "tokenFiatAmount": 0,
                                      },
                                    ]
                                  }
                                />,
                                "data": [
                                  {
                                    "address": "0x0",
                                    "balanceFiat": "< $0.01",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "isETH": true,
                                    "isStaked": false,
                                    "name": "Ethereum",
                                    "symbol": "ETH",
                                    "tokenFiatAmount": NaN,
                                  },
                                  {
                                    "address": "0x01",
                                    "balanceFiat": "$0",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "name": "Bat",
                                    "symbol": "BAT",
                                    "tokenFiatAmount": 0,
                                  },
                                  {
                                    "address": "0x02",
                                    "balanceFiat": "$0",
                                    "decimals": 18,
                                    "iconUrl": "",
                                    "name": "Link",
                                    "symbol": "LINK",
                                    "tokenFiatAmount": 0,
                                  },
                                ],
                                "estimatedItemSize": 50,
                                "keyExtractor": [Function],
                                "numColumns": 1,
                                "refreshControl": <RefreshControlMock
                                  colors={
                                    [
                                      "#0376c9",
                                    ]
                                  }
                                  onRefresh={[Function]}
                                  refreshing={false}
                                  tintColor="#141618"
                                />,
                                "renderItem": [Function],
                                "testID": "token-list",
                              },
                              "renderWindowInsets": {
                                "height": 0,
                                "width": 0,
                              },
                              "shouldRefreshWithAnchoring": true,
                            }
                          }
                          maxRenderAhead={750}
                          numColumns={1}
                          onEndReached={[Function]}
                          onEndReachedThreshold={0}
                          onEndReachedThresholdRelative={0}
                          onItemLayout={[Function]}
                          onLayout={[Function]}
                          onScroll={[Function]}
                          onScrollBeginDrag={[Function]}
                          onSizeChanged={[Function]}
                          onVisibleIndicesChanged={[Function]}
                          refreshControl={
                            <RefreshControlMock
                              colors={
                                [
                                  "#0376c9",
                                ]
                              }
                              onRefresh={[Function]}
                              refreshing={false}
                              tintColor="#141618"
                            />
                          }
                          removeClippedSubviews={false}
                          renderAheadOffset={0}
                          renderAheadStep={250}
                          renderContentContainer={[Function]}
                          renderItem={[Function]}
                          renderItemContainer={[Function]}
                          rowRenderer={[Function]}
                          scrollEventThrottle={16}
                          scrollThrottle={16}
                          scrollViewProps={
                            {
                              "contentContainerStyle": {
                                "backgroundColor": undefined,
                                "minHeight": 1,
                                "minWidth": 1,
                                "paddingLeft": 0,
                                "paddingRight": 0,
                              },
                              "onLayout": [Function],
                              "onScrollBeginDrag": [Function],
                              "refreshControl": <RefreshControlMock
                                colors={
                                  [
                                    "#0376c9",
                                  ]
                                }
                                onRefresh={[Function]}
                                refreshing={false}
                                tintColor="#141618"
                              />,
                              "style": {
                                "minHeight": 1,
                                "minWidth": 1,
                              },
                            }
                          }
                          style={
                            {
                              "minHeight": 1,
                              "minWidth": 1,
                            }
                          }
                          suppressBoundedSizeException={true}
                          testID="token-list"
                          windowCorrectionConfig={
                            {
                              "applyToInitialOffset": true,
                              "applyToItemScroll": true,
                              "value": {
                                "endCorrection": 0,
                                "startCorrection": 0,
                                "windowShift": -0,
                              },
                            }
                          }
                        >
                          <RCTRefreshControl />
                          <View>
                            <View
                              style={
                                {
                                  "flexDirection": "column",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "paddingLeft": 0,
                                    "paddingTop": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  [
                                    undefined,
                                    undefined,
                                  ]
                                }
                              />
                              <AutoLayoutView
                                enableInstrumentation={false}
                                horizontal={false}
                                onBlankAreaEvent={[Function]}
                                onLayout={[Function]}
                                renderAheadOffset={0}
                                scrollOffset={0}
                                style={
                                  {
                                    "height": 150,
                                    "width": 400,
                                  }
                                }
                                windowSize={900}
                              >
                                <CellContainer
                                  index={0}
                                  onLayout={[Function]}
                                  style={
                                    {
                                      "alignItems": "stretch",
                                      "flexDirection": "column",
                                      "left": 0,
                                      "position": "absolute",
                                      "top": 0,
                                      "width": 400,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flexDirection": "column",
                                      }
                                    }
                                  >
                                    <TouchableOpacity
                                      onLongPress={[Function]}
                                      onPress={[Function]}
                                      style={
                                        {
                                          "alignItems": "flex-start",
                                          "flex": 1,
                                          "flexDirection": "row",
                                          "paddingHorizontal": 15,
                                          "paddingVertical": 10,
                                        }
                                      }
                                      testID="asset-ETH"
                                    >
                                      <View
                                        onLayout={[Function]}
                                        style={
                                          {
                                            "alignSelf": "flex-start",
                                            "position": "relative",
                                          }
                                        }
                                        testID="badge-wrapper-badge"
                                      >
                                        <View>
                                          <View
                                            useNativeDriver={true}
                                          >
                                            <Image
                                              fadeIn={true}
                                              onError={[Function]}
                                              onLoadEnd={[Function]}
                                              source={
                                                {
                                                  "uri": "",
                                                }
                                              }
                                              style={
                                                [
                                                  {
                                                    "borderRadius": 12,
                                                    "height": 24,
                                                    "width": 24,
                                                  },
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  {
                                                    "borderRadius": 16,
                                                    "height": 32,
                                                    "overflow": "hidden",
                                                    "width": 32,
                                                  },
                                                ]
                                              }
                                            />
                                            <View
                                              collapsable={false}
                                              style={
                                                {
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 1,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  [
                                                    {
                                                      "borderRadius": 16,
                                                      "height": 32,
                                                      "overflow": "hidden",
                                                      "width": 32,
                                                    },
                                                    {
                                                      "backgroundColor": "#eee",
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              />
                                            </View>
                                          </View>
                                        </View>
                                        <View
                                          style={
                                            {
                                              "alignItems": "center",
                                              "aspectRatio": 1,
                                              "height": 0,
                                              "justifyContent": "center",
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                              "transform": [
                                                {
                                                  "translateX": 0,
                                                },
                                                {
                                                  "translateY": -0,
                                                },
                                              ],
                                            }
                                          }
                                        >
                                          <View
                                            onLayout={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "aspectRatio": 1,
                                                "height": "50%",
                                                "justifyContent": "center",
                                                "maxHeight": 24,
                                                "minHeight": 8,
                                                "opacity": 0,
                                              }
                                            }
                                            testID="badgenetwork"
                                          >
                                            <View
                                              style={
                                                {
                                                  "alignItems": "center",
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#ffffff",
                                                  "borderRadius": 16,
                                                  "borderWidth": 2,
                                                  "height": 32,
                                                  "justifyContent": "center",
                                                  "overflow": "hidden",
                                                  "shadowColor": "#0000001a",
                                                  "shadowOffset": {
                                                    "height": 2,
                                                    "width": 0,
                                                  },
                                                  "shadowOpacity": 1,
                                                  "shadowRadius": 4,
                                                  "transform": [
                                                    {
                                                      "scale": 1,
                                                    },
                                                  ],
                                                  "width": 32,
                                                }
                                              }
                                            >
                                              <Image
                                                onError={[Function]}
                                                resizeMode="contain"
                                                source={
                                                  {
                                                    "uri": "MockImage",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 32,
                                                    "width": 32,
                                                  }
                                                }
                                                testID="network-avatar-image"
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                      <View
                                        style={
                                          {
                                            "flex": 1,
                                            "justifyContent": "center",
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "flexDirection": "row",
                                            }
                                          }
                                        >
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#141618",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 16,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                              }
                                            }
                                          >
                                            Ethereum
                                          </Text>
                                          <View
                                            accessibilityState={
                                              {
                                                "busy": undefined,
                                                "checked": undefined,
                                                "disabled": undefined,
                                                "expanded": undefined,
                                                "selected": undefined,
                                              }
                                            }
                                            accessibilityValue={
                                              {
                                                "max": undefined,
                                                "min": undefined,
                                                "now": undefined,
                                                "text": undefined,
                                              }
                                            }
                                            accessible={true}
                                            collapsable={false}
                                            focusable={true}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "flexDirection": "row",
                                              }
                                            }
                                            testID="stake-button"
                                          >
                                            <Text
                                              accessibilityRole="text"
                                              style={
                                                {
                                                  "color": "#141618",
                                                  "fontFamily": "EuclidCircularB-Medium",
                                                  "fontSize": 16,
                                                  "fontWeight": "500",
                                                  "letterSpacing": 0,
                                                  "lineHeight": 24,
                                                }
                                              }
                                            >
                                               • 
                                              <Text
                                                accessibilityRole="text"
                                                style={
                                                  {
                                                    "color": "#0376c9",
                                                    "fontFamily": "EuclidCircularB-Medium",
                                                    "fontSize": 16,
                                                    "fontWeight": "500",
                                                    "letterSpacing": 0,
                                                    "lineHeight": 24,
                                                  }
                                                }
                                              >
                                                Earn 
                                              </Text>
                                            </Text>
                                            <SvgMock
                                              color="#0376c9"
                                              height={16}
                                              name="Plant"
                                              style={
                                                {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                              width={16}
                                            />
                                          </View>
                                        </View>
                                        <View>
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#d73847",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 14,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 22,
                                              }
                                            }
                                          />
                                        </View>
                                      </View>
                                      <Modal
                                        animationType="none"
                                        deviceHeight={null}
                                        deviceWidth={null}
                                        hardwareAccelerated={false}
                                        hideModalContentWhileAnimating={false}
                                        onBackdropPress={[Function]}
                                        onModalHide={[Function]}
                                        onModalWillHide={[Function]}
                                        onModalWillShow={[Function]}
                                        onRequestClose={[Function]}
                                        onSwipeComplete={[Function]}
                                        panResponderThreshold={4}
                                        scrollHorizontal={false}
                                        scrollOffset={0}
                                        scrollOffsetMax={0}
                                        scrollTo={null}
                                        statusBarTranslucent={false}
                                        supportedOrientations={
                                          [
                                            "portrait",
                                            "landscape",
                                          ]
                                        }
                                        swipeDirection="down"
                                        swipeThreshold={100}
                                        transparent={true}
                                        visible={false}
                                      />
                                      <View
                                        style={
                                          {
                                            "alignItems": "flex-end",
                                            "alignSelf": "flex-end",
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#141618",
                                              "fontFamily": "EuclidCircularB-Medium",
                                              "fontSize": 16,
                                              "fontWeight": "500",
                                              "letterSpacing": 0,
                                              "lineHeight": 24,
                                            }
                                          }
                                          testID="fiat-balance-test-id"
                                        >
                                           ETH
                                        </Text>
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#6a737d",
                                              "fontFamily": "EuclidCircularB-Regular",
                                              "fontSize": 14,
                                              "fontWeight": "400",
                                              "letterSpacing": 0,
                                              "lineHeight": 22,
                                              "paddingHorizontal": 0,
                                              "textTransform": "uppercase",
                                            }
                                          }
                                          testID="main-balance-test-id"
                                        >
                                          &lt; $0.01
                                        </Text>
                                      </View>
                                    </TouchableOpacity>
                                  </View>
                                </CellContainer>
                                <CellContainer
                                  index={1}
                                  onLayout={[Function]}
                                  style={
                                    {
                                      "alignItems": "stretch",
                                      "flexDirection": "column",
                                      "left": 0,
                                      "position": "absolute",
                                      "top": 50,
                                      "width": 400,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flexDirection": "column",
                                      }
                                    }
                                  >
                                    <TouchableOpacity
                                      onLongPress={[Function]}
                                      onPress={[Function]}
                                      style={
                                        {
                                          "alignItems": "flex-start",
                                          "flex": 1,
                                          "flexDirection": "row",
                                          "paddingHorizontal": 15,
                                          "paddingVertical": 10,
                                        }
                                      }
                                      testID="asset-BAT"
                                    >
                                      <View
                                        onLayout={[Function]}
                                        style={
                                          {
                                            "alignSelf": "flex-start",
                                            "position": "relative",
                                          }
                                        }
                                        testID="badge-wrapper-badge"
                                      >
                                        <View>
                                          <View
                                            style={
                                              {
                                                "backgroundColor": "#ffffff",
                                                "borderRadius": 16,
                                                "height": 32,
                                                "overflow": "hidden",
                                                "width": 32,
                                              }
                                            }
                                          >
                                            <Image
                                              onError={[Function]}
                                              resizeMode="contain"
                                              source={
                                                {
                                                  "uri": undefined,
                                                }
                                              }
                                              style={
                                                {
                                                  "flex": 1,
                                                  "height": undefined,
                                                  "width": undefined,
                                                }
                                              }
                                              testID="token-avatar-image"
                                            />
                                          </View>
                                        </View>
                                        <View
                                          style={
                                            {
                                              "alignItems": "center",
                                              "aspectRatio": 1,
                                              "height": 0,
                                              "justifyContent": "center",
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                              "transform": [
                                                {
                                                  "translateX": 0,
                                                },
                                                {
                                                  "translateY": -0,
                                                },
                                              ],
                                            }
                                          }
                                        >
                                          <View
                                            onLayout={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "aspectRatio": 1,
                                                "height": "50%",
                                                "justifyContent": "center",
                                                "maxHeight": 24,
                                                "minHeight": 8,
                                                "opacity": 0,
                                              }
                                            }
                                            testID="badgenetwork"
                                          >
                                            <View
                                              style={
                                                {
                                                  "alignItems": "center",
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#ffffff",
                                                  "borderRadius": 16,
                                                  "borderWidth": 2,
                                                  "height": 32,
                                                  "justifyContent": "center",
                                                  "overflow": "hidden",
                                                  "shadowColor": "#0000001a",
                                                  "shadowOffset": {
                                                    "height": 2,
                                                    "width": 0,
                                                  },
                                                  "shadowOpacity": 1,
                                                  "shadowRadius": 4,
                                                  "transform": [
                                                    {
                                                      "scale": 1,
                                                    },
                                                  ],
                                                  "width": 32,
                                                }
                                              }
                                            >
                                              <Image
                                                onError={[Function]}
                                                resizeMode="contain"
                                                source={
                                                  {
                                                    "uri": "MockImage",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 32,
                                                    "width": 32,
                                                  }
                                                }
                                                testID="network-avatar-image"
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                      <View
                                        style={
                                          {
                                            "flex": 1,
                                            "justifyContent": "center",
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "flexDirection": "row",
                                            }
                                          }
                                        >
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#141618",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 16,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                              }
                                            }
                                          >
                                            Bat
                                          </Text>
                                        </View>
                                        <View>
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#d73847",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 14,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 22,
                                              }
                                            }
                                          />
                                        </View>
                                      </View>
                                      <Modal
                                        animationType="none"
                                        deviceHeight={null}
                                        deviceWidth={null}
                                        hardwareAccelerated={false}
                                        hideModalContentWhileAnimating={false}
                                        onBackdropPress={[Function]}
                                        onModalHide={[Function]}
                                        onModalWillHide={[Function]}
                                        onModalWillShow={[Function]}
                                        onRequestClose={[Function]}
                                        onSwipeComplete={[Function]}
                                        panResponderThreshold={4}
                                        scrollHorizontal={false}
                                        scrollOffset={0}
                                        scrollOffsetMax={0}
                                        scrollTo={null}
                                        statusBarTranslucent={false}
                                        supportedOrientations={
                                          [
                                            "portrait",
                                            "landscape",
                                          ]
                                        }
                                        swipeDirection="down"
                                        swipeThreshold={100}
                                        transparent={true}
                                        visible={false}
                                      />
                                      <View
                                        style={
                                          {
                                            "alignItems": "flex-end",
                                            "alignSelf": "flex-end",
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#141618",
                                              "fontFamily": "EuclidCircularB-Medium",
                                              "fontSize": 16,
                                              "fontWeight": "500",
                                              "letterSpacing": 0,
                                              "lineHeight": 24,
                                            }
                                          }
                                          testID="fiat-balance-test-id"
                                        >
                                          &lt; 0.00001 BAT
                                        </Text>
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#6a737d",
                                              "fontFamily": "EuclidCircularB-Regular",
                                              "fontSize": 14,
                                              "fontWeight": "400",
                                              "letterSpacing": 0,
                                              "lineHeight": 22,
                                              "paddingHorizontal": 0,
                                              "textTransform": "uppercase",
                                            }
                                          }
                                          testID="main-balance-test-id"
                                        >
                                          $0
                                        </Text>
                                      </View>
                                    </TouchableOpacity>
                                  </View>
                                </CellContainer>
                                <CellContainer
                                  index={2}
                                  onLayout={[Function]}
                                  style={
                                    {
                                      "alignItems": "stretch",
                                      "flexDirection": "column",
                                      "left": 0,
                                      "position": "absolute",
                                      "top": 100,
                                      "width": 400,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flexDirection": "column",
                                      }
                                    }
                                  >
                                    <TouchableOpacity
                                      onLongPress={[Function]}
                                      onPress={[Function]}
                                      style={
                                        {
                                          "alignItems": "flex-start",
                                          "flex": 1,
                                          "flexDirection": "row",
                                          "paddingHorizontal": 15,
                                          "paddingVertical": 10,
                                        }
                                      }
                                      testID="asset-LINK"
                                    >
                                      <View
                                        onLayout={[Function]}
                                        style={
                                          {
                                            "alignSelf": "flex-start",
                                            "position": "relative",
                                          }
                                        }
                                        testID="badge-wrapper-badge"
                                      >
                                        <View>
                                          <View
                                            style={
                                              {
                                                "backgroundColor": "#ffffff",
                                                "borderRadius": 16,
                                                "height": 32,
                                                "overflow": "hidden",
                                                "width": 32,
                                              }
                                            }
                                          >
                                            <Image
                                              onError={[Function]}
                                              resizeMode="contain"
                                              source={
                                                {
                                                  "uri": undefined,
                                                }
                                              }
                                              style={
                                                {
                                                  "flex": 1,
                                                  "height": undefined,
                                                  "width": undefined,
                                                }
                                              }
                                              testID="token-avatar-image"
                                            />
                                          </View>
                                        </View>
                                        <View
                                          style={
                                            {
                                              "alignItems": "center",
                                              "aspectRatio": 1,
                                              "height": 0,
                                              "justifyContent": "center",
                                              "position": "absolute",
                                              "right": 0,
                                              "top": 0,
                                              "transform": [
                                                {
                                                  "translateX": 0,
                                                },
                                                {
                                                  "translateY": -0,
                                                },
                                              ],
                                            }
                                          }
                                        >
                                          <View
                                            onLayout={[Function]}
                                            style={
                                              {
                                                "alignItems": "center",
                                                "aspectRatio": 1,
                                                "height": "50%",
                                                "justifyContent": "center",
                                                "maxHeight": 24,
                                                "minHeight": 8,
                                                "opacity": 0,
                                              }
                                            }
                                            testID="badgenetwork"
                                          >
                                            <View
                                              style={
                                                {
                                                  "alignItems": "center",
                                                  "backgroundColor": "#ffffff",
                                                  "borderColor": "#ffffff",
                                                  "borderRadius": 16,
                                                  "borderWidth": 2,
                                                  "height": 32,
                                                  "justifyContent": "center",
                                                  "overflow": "hidden",
                                                  "shadowColor": "#0000001a",
                                                  "shadowOffset": {
                                                    "height": 2,
                                                    "width": 0,
                                                  },
                                                  "shadowOpacity": 1,
                                                  "shadowRadius": 4,
                                                  "transform": [
                                                    {
                                                      "scale": 1,
                                                    },
                                                  ],
                                                  "width": 32,
                                                }
                                              }
                                            >
                                              <Image
                                                onError={[Function]}
                                                resizeMode="contain"
                                                source={
                                                  {
                                                    "uri": "MockImage",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 32,
                                                    "width": 32,
                                                  }
                                                }
                                                testID="network-avatar-image"
                                              />
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                      <View
                                        style={
                                          {
                                            "flex": 1,
                                            "justifyContent": "center",
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "flexDirection": "row",
                                            }
                                          }
                                        >
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#141618",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 16,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                              }
                                            }
                                          >
                                            Link
                                          </Text>
                                        </View>
                                        <View>
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#d73847",
                                                "fontFamily": "EuclidCircularB-Medium",
                                                "fontSize": 14,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 22,
                                              }
                                            }
                                          />
                                        </View>
                                      </View>
                                      <Modal
                                        animationType="none"
                                        deviceHeight={null}
                                        deviceWidth={null}
                                        hardwareAccelerated={false}
                                        hideModalContentWhileAnimating={false}
                                        onBackdropPress={[Function]}
                                        onModalHide={[Function]}
                                        onModalWillHide={[Function]}
                                        onModalWillShow={[Function]}
                                        onRequestClose={[Function]}
                                        onSwipeComplete={[Function]}
                                        panResponderThreshold={4}
                                        scrollHorizontal={false}
                                        scrollOffset={0}
                                        scrollOffsetMax={0}
                                        scrollTo={null}
                                        statusBarTranslucent={false}
                                        supportedOrientations={
                                          [
                                            "portrait",
                                            "landscape",
                                          ]
                                        }
                                        swipeDirection="down"
                                        swipeThreshold={100}
                                        transparent={true}
                                        visible={false}
                                      />
                                      <View
                                        style={
                                          {
                                            "alignItems": "flex-end",
                                            "alignSelf": "flex-end",
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#141618",
                                              "fontFamily": "EuclidCircularB-Medium",
                                              "fontSize": 16,
                                              "fontWeight": "500",
                                              "letterSpacing": 0,
                                              "lineHeight": 24,
                                            }
                                          }
                                          testID="fiat-balance-test-id"
                                        >
                                          0 LINK
                                        </Text>
                                        <Text
                                          accessibilityRole="text"
                                          style={
                                            {
                                              "color": "#6a737d",
                                              "fontFamily": "EuclidCircularB-Regular",
                                              "fontSize": 14,
                                              "fontWeight": "400",
                                              "letterSpacing": 0,
                                              "lineHeight": 22,
                                              "paddingHorizontal": 0,
                                              "textTransform": "uppercase",
                                            }
                                          }
                                          testID="main-balance-test-id"
                                        >
                                          $0
                                        </Text>
                                      </View>
                                    </TouchableOpacity>
                                  </View>
                                </CellContainer>
                              </AutoLayoutView>
                              <CellContainer
                                index={-1}
                                style={
                                  [
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "marginTop": 9,
                                      "paddingBottom": 30,
                                    }
                                  }
                                >
                                  <TouchableOpacity
                                    disabled={false}
                                    onPress={[Function]}
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                    testID="import-token-footer-link"
                                  >
                                    <Text
                                      accessibilityRole="text"
                                      style={
                                        {
                                          "color": "#141618",
                                          "fontFamily": "EuclidCircularB-Regular",
                                          "fontSize": 14,
                                          "fontWeight": "400",
                                          "letterSpacing": 0,
                                          "lineHeight": 22,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      <Text
                                        accessibilityRole="text"
                                        style={
                                          {
                                            "color": "#6a737d",
                                            "fontFamily": "EuclidCircularB-Regular",
                                            "fontSize": 14,
                                            "fontWeight": "400",
                                            "letterSpacing": 0,
                                            "lineHeight": 22,
                                            "marginBottom": 8,
                                          }
                                        }
                                      >
                                        Don't see your token?
                                      </Text>
                                       
                                      <Text
                                        accessibilityRole="text"
                                        style={
                                          {
                                            "color": "#0376c9",
                                            "fontFamily": "EuclidCircularB-Regular",
                                            "fontSize": 14,
                                            "fontWeight": "400",
                                            "letterSpacing": 0,
                                            "lineHeight": 22,
                                          }
                                        }
                                      >
                                        Import tokens
                                      </Text>
                                    </Text>
                                  </TouchableOpacity>
                                </View>
                              </CellContainer>
                              <View
                                style={
                                  {
                                    "paddingBottom": 0,
                                    "paddingRight": 0,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;
